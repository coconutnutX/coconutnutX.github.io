<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CoCoNutNut&#39;s NoteBook</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://coconutnutx.github.io/"/>
  <updated>2021-11-16T11:01:22.000Z</updated>
  <id>https://coconutnutx.github.io/</id>
  
  <author>
    <name>coconutnut</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>更改主题记录</title>
    <link href="https://coconutnutx.github.io/2021/11/16/algolia/"/>
    <id>https://coconutnutx.github.io/2021/11/16/algolia/</id>
    <published>2021-11-16T11:01:22.000Z</published>
    <updated>2021-11-16T11:01:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前一直用的<a href="https://github.com/Shen-Yu/hexo-theme-ayer">Ayer</a>主题，突然发现搜索不能用，debug了一早上解决不了，决定干脆换个主题</p><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><p>试试<a href="https://github.com/lh1me/hexo-theme-aomori">Aomori</a></p><p>安装参考：</p><p><a href="https://linhong.me/2020/01/27/hexo-theme-aomori/#%E5%BC%80%E5%A7%8B%E4%BD%BF%E7%94%A8">Aomori</a></p><p>过程中搜索API有点小bug，解决参考：</p><p><a href="https://www.npmjs.com/package/hexo-algolia#security-concerns">hexo-algolia</a></p><p><a href="https://hyandou.github.io/2018/06/13/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89/">hexo搭建博客（四）</a></p><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><p>换了一个<a href="https://github.com/SukkaW/hexo-theme-suka">suka</a></p><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><p>还发现<a href="https://github.com/XPoet/hexo-theme-keep">keep</a>也挺好看，备用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前一直用的&lt;a href=&quot;https://github.com/Shen-Yu/hexo-theme-ayer&quot;&gt;Ayer&lt;/a&gt;主题，突然发现搜索不能用，debug了一早上解决不了，决定干脆换个主题&lt;/p&gt;
&lt;h1 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://coconutnutx.github.io/categories/Memo/"/>
    
    
      <category term="tool" scheme="https://coconutnutx.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>sync example note2：memory order</title>
    <link href="https://coconutnutx.github.io/2021/11/13/concurrent2/"/>
    <id>https://coconutnutx.github.io/2021/11/13/concurrent2/</id>
    <published>2021-11-13T09:26:37.000Z</published>
    <updated>2021-11-13T09:26:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>Producer consumer example</p><p>There might be conflict on buffer[], but consumed_until and produced_until prevent that (if used correctly).</p><p>So, only need to make sure consumed_until and produced_until accessed correctly under concurrency.</p><h1 id="Using-locks"><a href="#Using-locks" class="headerlink" title="Using locks"></a>Using locks</h1><p>In each round of produce()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  lock_acquire(&amp;lock);</span><br><span class="line">  <span class="keyword">if</span> (consumed_until + BUFFER_SIZE &gt; r) <span class="keyword">break</span>;</span><br><span class="line">  lock_release(&amp;lock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">produced[r] = ...</span><br><span class="line">buffer[r % BUFFER_SIZE] = produced[r];</span><br><span class="line">produced_until++;</span><br><span class="line">lock_release(&amp;lock);</span><br></pre></td></tr></table></figure><p>Two locks:</p><ol><li>check if can produce: conflict on consumed_until</li><li>conflict on produced_until</li></ol><p>In each round of consume()</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  lock_acquire(&amp;lock);</span><br><span class="line">  <span class="keyword">if</span> (produced_until &gt; r) <span class="keyword">break</span>;</span><br><span class="line">  lock_release(&amp;lock);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">consumed[r] = buffer[r % BUFFER_SIZE];</span><br><span class="line">consumed_until++;</span><br><span class="line">lock_release(&amp;lock);</span><br></pre></td></tr></table></figure><p>Two locks:</p><ol><li>check if can consume: conflict on produced_until</li><li>conflict on consumed_until</li></ol><h1 id="Using-atomic-vairables"><a href="#Using-atomic-vairables" class="headerlink" title="Using atomic vairables"></a>Using atomic vairables</h1><p>In produce, two locks can be modified:</p><ol><li><p>check if can produce: conflict on consumed_until</p><p>no ordering constraints -&gt; memory_order_relaxed</p></li><li><p>conflict on produced_until</p><p>store produced_until should happen after all operations -&gt; load-store + store-store = release</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="comment">// The memory order can be relaxed as we don&#x27;t read anything &quot;produced&quot; by the consumer.</span></span><br><span class="line">  <span class="keyword">int</span> local_cu = atomic_load_explicit(&amp;consumed_until, memory_order_relaxed);</span><br><span class="line">  <span class="keyword">if</span> (local_cu + BUFFER_SIZE &gt; r) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">produced[r] = ...</span><br><span class="line">buffer[r % BUFFER_SIZE] = produced[r];</span><br><span class="line"><span class="comment">// We want to increment &quot;produced_until&quot; after the buffer has been written.</span></span><br><span class="line"><span class="comment">// By using memory_order_release, we prevent the STOREs on buffer from being</span></span><br><span class="line"><span class="comment">// reordered after the atomic operation.</span></span><br><span class="line">atomic_fetch_add_explicit(&amp;produced_until, <span class="number">1</span>, memory_order_release);</span><br></pre></td></tr></table></figure><p>In consume, two locks can be modified:</p><ol><li><p>check if can consume: conflict on produced_until</p><p>load produced_until should happen before all operations -&gt; load-load + load-store = acquire</p></li><li><p>conflict on consumed_until</p><p>store consumed_until should happen after all operations -&gt; load-store + store-store = release</p></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="comment">// We don&#x27;t want to access the buffer before checking the atomic variable.</span></span><br><span class="line">  <span class="comment">// The memory_order_acquire prevents this reordering.</span></span><br><span class="line">  <span class="keyword">int</span> local_pu = atomic_load_explicit(&amp;produced_until, memory_order_acquire);</span><br><span class="line">  <span class="keyword">if</span> (local_pu &gt; r) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">consumed[r] = buffer[r % BUFFER_SIZE];</span><br><span class="line">atomic_fetch_add_explicit(&amp;consumed_until, <span class="number">1</span>, memory_order_release);</span><br></pre></td></tr></table></figure><h1 id="Memory-barriers"><a href="#Memory-barriers" class="headerlink" title="Memory barriers"></a>Memory barriers</h1><blockquote><p><a href="https://en.cppreference.com/w/cpp/atomic/memory_order">std::memory_order</a></p><p><a href="https://www.modernescpp.com/index.php/fences-as-memory-barriers">Fences are Memory Barriers</a></p><p><a href="https://www.youtube.com/watch?v=qlkMbxUbKfw&ab_channel=CodeBlacksmith">Memory Barriers - Learn Modern C++</a></p></blockquote><ul><li><p>memory_order_relaxed: no ordering constraints</p></li><li><p>memory_order_consume</p></li><li><p>memory_order_acquire: load-load + load-store</p><img src="/images/2021/screencapture2021-11-13 AM10.59.57.jpg"></li><li><p>memory_order_release: load-store + store-store</p><img src="/images/2021/screencapture2021-11-13 AM11.00.42.jpg"></li><li><p>memory_order_acq_rel</p></li><li><p>memory_order_seq_cst</p></li></ul><img src="/images/2021/screencapture2021-11-13 AM10.55.43.jpg"><img src="/images/2021/screencapture2021-11-13 AM10.57.03.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Producer consumer example&lt;/p&gt;
&lt;p&gt;There might be conflict on buffer[], but consumed_until and produced_until prevent that (if used correct
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="concurrent_algorithm" scheme="https://coconutnutx.github.io/tags/concurrent-algorithm/"/>
    
  </entry>
  
  <entry>
    <title>sync example note1</title>
    <link href="https://coconutnutx.github.io/2021/11/13/concurrent/"/>
    <id>https://coconutnutx.github.io/2021/11/13/concurrent/</id>
    <published>2021-11-13T08:53:44.000Z</published>
    <updated>2021-11-13T08:53:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>Cync example for C concurrent programing</p><h1 id="Threads"><a href="#Threads" class="headerlink" title="Threads"></a>Threads</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RUNS (4096 * 256)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> THREADS 4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> *<span class="title">count</span><span class="params">(<span class="keyword">void</span>* null)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;New thread created\n&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// declare an array of 4 threads</span></span><br><span class="line">  <span class="keyword">pthread_t</span> handlers[THREADS];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">intptr_t</span> i = <span class="number">0</span>; i &lt; THREADS; i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> res = pthread_create(&amp;handlers[i], <span class="literal">NULL</span>, count, <span class="literal">NULL</span>);</span><br><span class="line">    assert(!res);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; THREADS; i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> res = pthread_join(handlers[i], <span class="literal">NULL</span>);</span><br><span class="line">    assert(!res);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (counter != RUNS * THREADS) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Didn&#x27;t count so well. :/, found %d\n&quot;</span>, counter);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Counted up to %d.\n&quot;</span>, counter);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="Lock"><a href="#Lock" class="headerlink" title="Lock"></a>Lock</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;lock.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>* <span class="title">count</span><span class="params">(<span class="keyword">void</span>* null)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> r = <span class="number">0</span>; r &lt; RUNS; r++) &#123;</span><br><span class="line">    lock_acquire(&amp;lock);</span><br><span class="line">    counter++;</span><br><span class="line">    lock_release(&amp;lock);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Better version: use lock_wait(&amp;lock) and lock_wake_up(&amp;lock) to prevent bucy wait, but rely on a notification.</p><h1 id="Atomic-variable"><a href="#Atomic-variable" class="headerlink" title="Atomic  variable"></a>Atomic  variable</h1><p>Atomic variables (~atomic registers) do not enforce atomic operation blocks.</p><p>Need to use atomic operation.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">atomic_int</span> counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span>* <span class="title">count</span><span class="params">(<span class="keyword">void</span>* null)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> r = <span class="number">0</span>; r &lt; RUNS; r++) &#123;</span><br><span class="line">    atomic_fetch_add(&amp;counter, <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Another example</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> expected = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (atomic_compare_exchange_strong(&amp;leader[r], &amp;expected, tid)) &#123;</span><br><span class="line">atomic_fetch_add(&amp;nb_leaders[r], <span class="number">1</span>); <span class="comment">// used to check correctness</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h1><p>当有include .h时，报错</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clang: error: linker command failed with <span class="built_in">exit</span> code <span class="number">1</span></span><br></pre></td></tr></table></figure><p>可以在Terminal</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc election2.c lock.c -o ekection2.o</span><br><span class="line">./election2.o</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Cync example for C concurrent programing&lt;/p&gt;
&lt;h1 id=&quot;Threads&quot;&gt;&lt;a href=&quot;#Threads&quot; class=&quot;headerlink&quot; title=&quot;Threads&quot;&gt;&lt;/a&gt;Threads&lt;/h1&gt;&lt;figu
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="concurrent_algorithm" scheme="https://coconutnutx.github.io/tags/concurrent-algorithm/"/>
    
  </entry>
  
  <entry>
    <title>Summary on basic register reductions</title>
    <link href="https://coconutnutx.github.io/2021/10/31/register/"/>
    <id>https://coconutnutx.github.io/2021/10/31/register/</id>
    <published>2021-10-31T17:01:49.000Z</published>
    <updated>2021-10-31T17:01:49.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/2021/screencapture2021-10-31 PM5.58.54.jpg">]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/images/2021/screencapture2021-10-31 PM5.58.54.jpg&quot;&gt;

      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="distributed_algorithm" scheme="https://coconutnutx.github.io/tags/distributed-algorithm/"/>
    
  </entry>
  
  <entry>
    <title>CountSketch Matrix</title>
    <link href="https://coconutnutx.github.io/2021/10/27/countsketch/"/>
    <id>https://coconutnutx.github.io/2021/10/27/countsketch/</id>
    <published>2021-10-27T20:58:59.000Z</published>
    <updated>2021-10-27T20:58:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>Drew a simple example to help understanding what I learned in class.</p><img src="/images/2021/2021-10-27-225725.png"><img src="/images/2021/2021-10-27-225726.png">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Drew a simple example to help understanding what I learned in class.&lt;/p&gt;
&lt;img src=&quot;/images/2021/2021-10-27-225725.png&quot;&gt;
&lt;img src=&quot;/images
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="sublinear_algorithm" scheme="https://coconutnutx.github.io/tags/sublinear-algorithm/"/>
    
  </entry>
  
  <entry>
    <title>DA project0 test record</title>
    <link href="https://coconutnutx.github.io/2021/10/19/DA-project-test/"/>
    <id>https://coconutnutx.github.io/2021/10/19/DA-project-test/</id>
    <published>2021-10-19T16:28:01.000Z</published>
    <updated>2021-10-19T16:28:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>Project0要求实现Perfect Link，给了测试用的tc.py用来修改网络情况，stress.py模拟发消息。（Distributed Algorithms 2021-2022 Project Validation.pdf）</p><p>想测一下试试。</p><p>注：以下几个测试都没有改tc.py的参数，即↓</p><img src="/images/2021/screencapture2021-10-19 PM6.43.30.jpg"><h1 id="Round-1"><a href="#Round-1" class="headerlink" title="Round 1"></a>Round 1</h1><p>参数如图：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">testConfig = &#123;</span><br><span class="line">        <span class="string">&#x27;concurrency&#x27;</span> : <span class="number">8</span>, <span class="comment"># How many threads are interferring with the running processes</span></span><br><span class="line">        <span class="string">&#x27;attempts&#x27;</span> : <span class="number">8</span>, <span class="comment"># How many interferring attempts each threads does</span></span><br><span class="line">        <span class="string">&#x27;attemptsDistribution&#x27;</span> : &#123; <span class="comment"># Probability with which an interferring thread will</span></span><br><span class="line">            <span class="string">&#x27;STOP&#x27;</span>: <span class="number">0.48</span>,          <span class="comment"># select an interferring action (make sure they add up to 1)</span></span><br><span class="line">            <span class="string">&#x27;CONT&#x27;</span>: <span class="number">0.48</span>,</span><br><span class="line">            <span class="string">&#x27;TERM&#x27;</span>:<span class="number">0.04</span></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 stress.py -r ../template_java/run.sh -t perfect -l output -p <span class="number">10</span> -m <span class="number">10</span></span><br></pre></td></tr></table></figure><p>testConfig在stress.py最后，这里全是默认，10个process，每个发10条消息（config中只有一行 10 1）</p><p>理论上来说，应该是2-9号都要给1号发10条，总共90条</p><p>但是出来的数据不完全是90</p><img src="/images/2021/screencapture2021-10-19 PM6.46.31.jpg"><p>（这里统计输出写了个简单工具，见最后）</p><p>根据后面测试的结果推测，问题在testConfig这里。concurrency和attempts数值都是8，也就是有8个捣乱线程各干预8次。STOP和CONT只是暂停和继续，不会干扰最后的结果。但是这里还有0.04的概率会发TERM，直接把正在干活的process杀了。所以最后有的只发了79、80</p><h1 id="Round-2"><a href="#Round-2" class="headerlink" title="Round 2"></a>Round 2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;concurrency&#x27;</span> : <span class="number">16</span></span><br><span class="line"><span class="string">&#x27;attempts&#x27;</span> : <span class="number">16</span></span><br><span class="line"><span class="string">&#x27;attemptsDistribution&#x27;</span> : </span><br><span class="line">            <span class="string">&#x27;STOP&#x27;</span>: <span class="number">0.48</span>,</span><br><span class="line">            <span class="string">&#x27;CONT&#x27;</span>: <span class="number">0.48</span>,</span><br><span class="line">            <span class="string">&#x27;TERM&#x27;</span>:<span class="number">0.04</span></span><br><span class="line"></span><br><span class="line">-p <span class="number">20</span> -m <span class="number">20</span></span><br></pre></td></tr></table></figure><p>试了几次这个参数，情况差不多。应该有19*20=380条，但是结果分别是：267、299、360、319</p><h1 id="突然"><a href="#突然" class="headerlink" title="突然"></a>突然</h1><p>经另一位当值的昆虫馆管理员提醒，测试进程数是有上限的</p><img src="/images/2021/screencapture2021-10-19 PM6.08.42.jpg"><p>对不起我的CPU🙇‍♂️</p><p>（但是这里到底是在说9 100是上限，还是举个例子说如果9 100，让跑25分钟？？？）</p><h1 id="Round-3"><a href="#Round-3" class="headerlink" title="Round 3"></a>Round 3</h1><p>于是就把p和m直接设成9和100</p><p>意识到TERM可能会对correctness有影响，这里把TERM也调成了0</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;concurrency&#x27;</span> : <span class="number">8</span></span><br><span class="line"><span class="string">&#x27;attempts&#x27;</span> : <span class="number">8</span></span><br><span class="line"><span class="string">&#x27;attemptsDistribution&#x27;</span> : </span><br><span class="line">            <span class="string">&#x27;STOP&#x27;</span>: <span class="number">0.5</span>,</span><br><span class="line">            <span class="string">&#x27;CONT&#x27;</span>: <span class="number">0.5</span>,</span><br><span class="line">            <span class="string">&#x27;TERM&#x27;</span>:<span class="number">0.0</span></span><br><span class="line"></span><br><span class="line">-p <span class="number">9</span> -m <span class="number">100</span></span><br></pre></td></tr></table></figure><img src="/images/2021/screencapture2021-10-19 PM7.06.12.jpg"><p>输出没毛病</p><h1 id="Round-4"><a href="#Round-4" class="headerlink" title="Round 4"></a>Round 4</h1><p>然后把TERM改回去</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;concurrency&#x27;</span> : <span class="number">8</span></span><br><span class="line"><span class="string">&#x27;attempts&#x27;</span> : <span class="number">8</span></span><br><span class="line"><span class="string">&#x27;attemptsDistribution&#x27;</span> : </span><br><span class="line">            <span class="string">&#x27;STOP&#x27;</span>: <span class="number">0.48</span>,</span><br><span class="line">            <span class="string">&#x27;CONT&#x27;</span>: <span class="number">0.48</span>,</span><br><span class="line">            <span class="string">&#x27;TERM&#x27;</span>:<span class="number">0.04</span></span><br><span class="line"></span><br><span class="line">-p <span class="number">9</span> -m <span class="number">100</span></span><br></pre></td></tr></table></figure><img src="/images/2021/screencapture2021-10-19 PM7.07.10.jpg"><p>左边是运行中部分输出</p><p>可以发现有的process被SIGTERM杀掉了，第一次SIGTERM多一些，最后收到的少一些。第二次最后才有一个SIGTERM，此时已经发完了</p><p>符合预期</p><h1 id="Tool"><a href="#Tool" class="headerlink" title="Tool"></a>Tool</h1><p>由于输出长得实在没眼看，不好debug，写了个工具统计一下</p><p>这两放一个目录下：</p><ul><li>count.py</li><li>output.txt</li></ul><p>output.txt是stress.py的输出（只是process 1的output，全是deliver没有broadcast的，长这样↓）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">d 2 81</span><br><span class="line">d 2 87</span><br><span class="line">d 2 85</span><br><span class="line">d 6 48</span><br><span class="line">d 6 58</span><br><span class="line">d 6 86</span><br><span class="line">d 6 90</span><br><span class="line">d 6 93</span><br><span class="line">d 6 95</span><br><span class="line">d 6 99</span><br><span class="line">d 6 94</span><br><span class="line">d 2 11</span><br><span class="line">d 2 61</span><br><span class="line">d 2 92</span><br><span class="line">d 2 2</span><br><span class="line">d 2 9</span><br><span class="line">d 6 54</span><br><span class="line">d 2 21</span><br><span class="line">d 2 14</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>count.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;output.txt&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">data = f.readlines()</span><br><span class="line"></span><br><span class="line"><span class="built_in">dict</span> = &#123;&#125;</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> data:</span><br><span class="line">splited = line.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">sender = <span class="built_in">int</span>(splited[<span class="number">1</span>])</span><br><span class="line">seq = <span class="built_in">int</span>(splited[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">dict</span>.setdefault(sender,[]).append(seq)</span><br><span class="line">count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nTotal number of senders: &quot;</span> , <span class="built_in">len</span>(<span class="built_in">dict</span>), <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Total number of messages: &quot;</span>,  count, <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Details (S: sender id; T: total message received, Q: seq)\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">keys = []</span><br><span class="line"><span class="keyword">for</span> sender <span class="keyword">in</span> <span class="built_in">dict</span>.keys():</span><br><span class="line">keys.append(<span class="built_in">int</span>(sender))</span><br><span class="line">keys.sort()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> sender <span class="keyword">in</span> keys:</span><br><span class="line"><span class="built_in">dict</span>[sender].sort()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;S:&quot;</span>, <span class="built_in">format</span>(sender,<span class="string">&quot;&lt;4&quot;</span>), <span class="string">&quot; T:&quot;</span>, <span class="built_in">format</span>(<span class="built_in">len</span>(<span class="built_in">dict</span>[sender]),<span class="string">&quot;&lt;5&quot;</span>), <span class="string">&quot; Q:&quot;</span>, <span class="built_in">dict</span>[sender])</span><br><span class="line"><span class="comment"># print(&quot;S:&quot;, format(sender,&quot;&lt;4&quot;), &quot; T:&quot;, format(len(dict[sender]),&quot;&lt;5&quot;))</span></span><br></pre></td></tr></table></figure><p>后面输出多了，可以把具体的SEQ删掉掉，前面少的时候可以看看有没有重复</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Project0要求实现Perfect Link，给了测试用的tc.py用来修改网络情况，stress.py模拟发消息。（Distributed Algorithms 2021-2022 Project Validation.pdf）&lt;/p&gt;
&lt;p&gt;想测一下试试。&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Memo" scheme="https://coconutnutx.github.io/categories/Memo/"/>
    
    
      <category term="distributed_algorithm" scheme="https://coconutnutx.github.io/tags/distributed-algorithm/"/>
    
  </entry>
  
  <entry>
    <title>记录anki卡片</title>
    <link href="https://coconutnutx.github.io/2021/04/21/anki/"/>
    <id>https://coconutnutx.github.io/2021/04/21/anki/</id>
    <published>2021-04-21T09:45:17.000Z</published>
    <updated>2021-04-21T09:45:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>打算用anki背法语单词，用Fast Word Query加发音</p><p>字段：</p><img src="/images/2021/screencapture2021-04-21 AM11.48.55.jpg" width="400px"><p>卡片：</p><p>正面模板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;/br&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;div class=&quot;background&quot;&gt;</span><br><span class="line">&lt;div&gt;&#123;&#123;word&#125;&#125;&lt;/div&gt;&lt;/br&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure><p>背面模板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;</span><br><span class="line">&lt;div class=&quot;background&quot;&gt;</span><br><span class="line">&#123;&#123;FrontSide&#125;&#125;</span><br><span class="line">&lt;hr id=answer&gt;</span><br><span class="line">&lt;div&gt;&#123;&#123;pronunciation&#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&#123;&#123;explanation&#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&#123;&#123;example&#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/center&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;var initVoice = function () &#123;</span><br><span class="line">    var player = document.getElementById(&#x27;dictVoice&#x27;);</span><br><span class="line">    document.addEventListener(&#x27;click&#x27;, function (e) &#123;</span><br><span class="line">        var target = e.target;</span><br><span class="line">        if (target.hasAttribute(&#x27;role&#x27;) &amp;&amp; target.getAttribute(&#x27;role&#x27;).indexOf(&#x27;dict_audio_js&#x27;) &gt;= 0) &#123;</span><br><span class="line">            var url = target.getAttribute(&#x27;data-rel&#x27;);</span><br><span class="line">            player.setAttribute(&#x27;src&#x27;, url);</span><br><span class="line">            player.volume = 1;</span><br><span class="line">            player.play();</span><br><span class="line">            e.preventDefault();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, false);</span><br><span class="line">&#125;;</span><br><span class="line">initVoice();&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>Fast Word Query配置：</p><img src="/images/2021/screencapture2021-04-21 AM11.47.38.jpg"><p>试了一下法语助手只能查到发音，没有解释，于是解释用了有道</p><p>此时效果：</p><img src="/images/2021/screencapture2021-04-21 AM11.51.40.jpg"><p>翻面自动发音，例句的语音也可以点</p><p>但有个问题是，查到的例句是白色，背景也是白色</p><p>选中example框，在编辑html中找到了这几个div的class，卡片中改样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.card &#123;</span><br><span class="line">font-family: arial;</span><br><span class="line">font-size: 20px;</span><br><span class="line">&#125;</span><br><span class="line">.background&#123;</span><br><span class="line">max-width: 800px;</span><br><span class="line">&#125;</span><br><span class="line">.mcols-layout&#123;</span><br><span class="line"> background-color:#333335</span><br><span class="line">&#125;</span><br><span class="line">.trans-container&#123;</span><br><span class="line">background-color: #333335;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>搞定~</p><img src="/images/2021/screencapture2021-04-21 PM12.22.46.jpg"><hr><p>又加了个pre字段，可以放le la之类的，显示时在word之前 </p><p>查的时候忽略（在Fast Word Query中Ignore掉），仍只查word，避免查不到解释</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打算用anki背法语单词，用Fast Word Query加发音&lt;/p&gt;
&lt;p&gt;字段：&lt;/p&gt;
&lt;img src=&quot;/images/2021/screencapture2021-04-21 AM11.48.55.jpg&quot; width=&quot;400px&quot;&gt;

&lt;p&gt;卡片：&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://coconutnutx.github.io/categories/Memo/"/>
    
    
      <category term="tool" scheme="https://coconutnutx.github.io/tags/tool/"/>
    
  </entry>
  
  <entry>
    <title>Unity Debug WebGL播放视频</title>
    <link href="https://coconutnutx.github.io/2021/04/02/unity-debug/"/>
    <id>https://coconutnutx.github.io/2021/04/02/unity-debug/</id>
    <published>2021-04-02T07:53:07.000Z</published>
    <updated>2021-04-02T07:53:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>Unity内运行时播放视频没问题，导出后用火狐打开就放不了，看控制台报错是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">已拦截跨源请求：同源策略禁止读取位于 file:///Users/.../unity/Backups/WebV0.3/sharedassets0.resource 的远程资源。（原因：CORS 请求不是 http）。</span><br></pre></td></tr></table></figure><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><ol><li><p>WebGL只能通过URL播放视频</p><blockquote><p><a href="https://blog.csdn.net/wuyt2008/article/details/107592492?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161752087116780265448826%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=161752087116780265448826&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~times_rank-10-107592492.first_rank_v2_pc_rank_v29&utm_term=unity+webgl+%E8%A7%86%E9%A2%91%E9%BB%91%E5%B1%8F">Unity2019在WebGL下播放视频</a></p></blockquote></li><li><p>火狐浏览器设置允许跨域</p><p>security.fileuri.strict_origin_policy改false</p><blockquote><p><a href="https://blog.csdn.net/qq_28867949/article/details/99890103?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-1&spm=1001.2101.3001.4242">Firefox火狐浏览器访问本地文件-提示跨域问题</a></p></blockquote></li><li><p>火狐浏览器设置允许播放视频</p><blockquote><p><a href="https://blog.csdn.net/qq_34243277/article/details/114398872?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-1&spm=1001.2101.3001.4242">Unity2018发布webgl视频无法播放</a></p></blockquote></li></ol><h1 id="各种失败尝试记录"><a href="#各种失败尝试记录" class="headerlink" title="各种失败尝试记录"></a>各种失败尝试记录</h1><p>1.</p><blockquote><p><a href="https://blog.kongregate.com/unity-html5-cors-and-you/">https://blog.kongregate.com/unity-html5-cors-and-you/</a></p></blockquote><p>写了问题原因，但是没看到针对Unity怎么解决</p><p>2.</p><blockquote><p><a href="https://www.jianshu.com/p/78904381ba32">https://www.jianshu.com/p/78904381ba32</a></p></blockquote><p>说把privacy.file_unique_origin改成false，但是它已经是false了</p><p>3.</p><p>发现Unity中Video Player的视频源有视频剪辑和URL两种方式</p><p>之前用的是视频剪辑，直接把mp4文件拖进去</p><p>改用URL试试，从浏览中找到同一个文件，测试也可以播放。试了一个网络上的mp4的URL，测试也可以</p><p>那或许可以尝试把mp4上传，然后用URL访问</p><blockquote><p><a href="https://blog.csdn.net/weixin_33912453/article/details/94087306?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-6.baidujs&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-6.baidujs">https://blog.csdn.net/weixin_33912453/article/details/94087306?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-6.baidujs&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-6.baidujs</a></p></blockquote><p>试试这个用爱奇艺开放平台的</p><p>发现注册应用必须有url</p><p>4.</p><p>再找一下有没有视频托管网站</p><p><a href="https://www.zhihu.com/question/23036186/answer/1716470191">https://www.zhihu.com/question/23036186/answer/1716470191</a></p><p>找了一个酷播云，视频要审核，等会再看（似乎不能直接拿到URL，可能要凉）</p><p><a href="http://www.stonepoll.com/helpcenter/hc/kb/article/fcc34c50-301a-822a-df8c-e690f5af5bb5/">http://www.stonepoll.com/helpcenter/hc/kb/article/fcc34c50-301a-822a-df8c-e690f5af5bb5/</a></p><p>腾讯云要买服务，算了先</p><p>又传了一个优酷的，等会看审核</p><p>得，拿不到mp4的URL</p><p>5.</p><p>还是从浏览器入手吧，试试允许跨域</p><p><a href="https://blog.csdn.net/nju_zjy/article/details/108870385">https://blog.csdn.net/nju_zjy/article/details/108870385</a></p><p>参考这个，装一个火狐插件</p><p>没用</p><p>多试了几个插件，都没用</p><p>6.</p><p>有找到一个调浏览器设置的</p><p><a href="https://blog.csdn.net/qq_28867949/article/details/99890103?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-1&amp;spm=1001.2101.3001.4242">https://blog.csdn.net/qq_28867949/article/details/99890103?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-1&amp;spm=1001.2101.3001.4242</a></p><p>把security.fileuri.strict_origin_policy改成false</p><p>【重启后不报错了！】</p><p>但是视频还是播放不了</p><p>7.</p><p><a href="https://blog.csdn.net/qq_38229886/article/details/103139228?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-2&amp;spm=1001.2101.3001.4242">https://blog.csdn.net/qq_38229886/article/details/103139228?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-2&amp;spm=1001.2101.3001.4242</a></p><p>WebGL不支持mp4？！…</p><p>转成ogv。没用</p><p>8.</p><p>找了一个在线的mp4地址，本地ok</p><p>导出WebGL运行，不报错，播放不了</p><p>9.</p><p><a href="https://blog.csdn.net/weixin_43779625/article/details/103410836">https://blog.csdn.net/weixin_43779625/article/details/103410836</a></p><p>改用Render Texture的方式（以前是材质覆盖）</p><p>不行（甚至本地都显示不了视频，只有声音）</p><p>10.</p><p><a href="https://blog.csdn.net/JLX_Sir/article/details/82684491?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.baidujs&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.baidujs">https://blog.csdn.net/JLX_Sir/article/details/82684491?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.baidujs&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.baidujs</a></p><p>说WebGL不支持高分辨率</p><p>试试在检查器里设置转码 1/4分辨率，比特率模式低，空间质量低</p><p>导出，不行</p><p>11.</p><p><a href="https://blog.csdn.net/qq_34243277/article/details/114398872?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-1&amp;spm=1001.2101.3001.4242">https://blog.csdn.net/qq_34243277/article/details/114398872?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-1&amp;spm=1001.2101.3001.4242</a></p><p>火狐还有阻止音视频的默认设置？？关掉</p><p>mp4和ogv都不行</p><p>12.</p><p><a href="https://blog.csdn.net/s1314_JHC/article/details/80618252">https://blog.csdn.net/s1314_JHC/article/details/80618252</a></p><p>还有说是WebGL不支持MovieTexture的，用插件</p><p>导出后是黑的，疯狂报错</p><p>13.</p><p><a href="https://blog.csdn.net/wuyt2008/article/details/107592492?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161752087116780265448826%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=161752087116780265448826&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~times_rank-10-107592492.first_rank_v2_pc_rank_v29&amp;utm_term=unity+webgl+%E8%A7%86%E9%A2%91%E9%BB%91%E5%B1%8F">https://blog.csdn.net/wuyt2008/article/details/107592492?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161752087116780265448826%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=161752087116780265448826&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~times_rank-10-107592492.first_rank_v2_pc_rank_v29&amp;utm_term=unity+webgl+%E8%A7%86%E9%A2%91%E9%BB%91%E5%B1%8F</a></p><p>这个说WebGL只能通过url播放</p><p>现在调过火狐的设置了，再试试url吧</p><p>!!!!!!!!!!!!成功了😭!!!!!!!!!!!!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Unity内运行时播放视频没问题，导出后用火狐打开就放不了，看控制台报错是&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity Project 版本记录</title>
    <link href="https://coconutnutx.github.io/2021/03/21/unity-project-memo/"/>
    <id>https://coconutnutx.github.io/2021/03/21/unity-project-memo/</id>
    <published>2021-03-21T16:35:47.000Z</published>
    <updated>2021-03-21T16:35:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="02-16-V0-1"><a href="#02-16-V0-1" class="headerlink" title="02.16 V0.1"></a>02.16 V0.1</h1><h2 id="新增基础移动操作"><a href="#新增基础移动操作" class="headerlink" title="新增基础移动操作"></a>新增基础移动操作</h2><ul><li><p>点击寻路</p><img src="/images/2021/Feb-16-2021 18-29-31.gif"></li><li><p>靠近显示介绍</p></li><li><p>鼠标滚动前后平移</p></li><li><p>键盘前后左右平移</p><img src="/images/2021/Feb-16-2021 18-30-32.gif"></li><li><p>鼠标拖拽旋转视角</p></li></ul><h1 id="02-19-V0-1-1"><a href="#02-19-V0-1-1" class="headerlink" title="02.19 V0.1.1"></a>02.19 V0.1.1</h1><h2 id="新增介绍牌"><a href="#新增介绍牌" class="headerlink" title="新增介绍牌"></a>新增介绍牌</h2><ul><li><p>删除靠近显示介绍</p></li><li><p>介绍牌鼠标移入高亮</p></li><li><p>点击介绍牌寻路</p><img src="/images/2021/Feb-19-2021 17-25-59.gif"><ul><li>寻路中任意操作打断</li><li>到达目的地后转向介绍牌</li></ul></li></ul><h2 id="新增导游栏"><a href="#新增导游栏" class="headerlink" title="新增导游栏"></a>新增导游栏</h2><ul><li><p>点击中间按钮寻路</p></li><li><p>点击左右按钮更新导游栏并寻路</p><img src="/images/2021/Feb-19-2021 17-26-58.gif"><ul><li>最左/最右时按钮不可用</li></ul></li></ul><h2 id="新增菜单栏"><a href="#新增菜单栏" class="headerlink" title="新增菜单栏"></a>新增菜单栏</h2><ul><li>点击帮助按钮弹出介绍</li></ul><h1 id="03-09-V0-1-2"><a href="#03-09-V0-1-2" class="headerlink" title="03.09 V0.1.2"></a>03.09 V0.1.2</h1><h2 id="新增介绍"><a href="#新增介绍" class="headerlink" title="新增介绍"></a>新增介绍</h2><ul><li><p>点击导航栏中按钮，显示简介</p><ul><li>文字超出时显示滚动条</li></ul><img src="/images/2021/Mar-09-2021 17-34-17.gif"><ul><li>点击查看大图打开新页面</li></ul></li></ul><h1 id="03-11-V0-2"><a href="#03-11-V0-2" class="headerlink" title="03.11 V0.2"></a>03.11 V0.2</h1><h2 id="重建展厅"><a href="#重建展厅" class="headerlink" title="重建展厅"></a>重建展厅</h2><ul><li><p>初始放入隋到五代的8张画</p></li><li><p>调整介绍牌样式</p></li><li><p>加入天花板和灯</p><img src="/images/2021/Mar-11-2021 16-54-44.gif"></li></ul><h1 id="03-16-V0-2-1"><a href="#03-16-V0-2-1" class="headerlink" title="03.16 V0.2.1"></a>03.16 V0.2.1</h1><h2 id="加入帮助按钮"><a href="#加入帮助按钮" class="headerlink" title="加入帮助按钮"></a>加入帮助按钮</h2><ul><li><p>点击显示操作说明</p><img src="/images/2021/Mar-16-2021 11-50-45.gif"></li></ul><h2 id="调整"><a href="#调整" class="headerlink" title="调整"></a>调整</h2><ul><li>点击查看大图时，在新窗口打开页面</li><li>调整点击寻路粒子效果</li></ul><h1 id="03-20-V0-2-2"><a href="#03-20-V0-2-2" class="headerlink" title="03.20 V0.2.2"></a>03.20 V0.2.2</h1><h2 id="HallA搭建基本完成"><a href="#HallA搭建基本完成" class="headerlink" title="HallA搭建基本完成"></a>HallA搭建基本完成</h2><ul><li><p>共28张画作</p><img src="/images/2021/Mar-21-2021 22-30-25.gif"></li><li><p>设置座椅、绿植、花瓶等</p><img src="/images/2021/Mar-21-2021 22-32-51.gif"></li></ul><h1 id="03-25-V0-2-3"><a href="#03-25-V0-2-3" class="headerlink" title="03.25 V0.2.3"></a>03.25 V0.2.3</h1><ul><li><p>修改导航栏高亮效果</p></li><li><p>新增装饰效果</p><img src="/images/2021/Mar-26-2021 10-03-52.gif"></li></ul><h2 id="新增音乐"><a href="#新增音乐" class="headerlink" title="新增音乐"></a>新增音乐</h2><ul><li>移动时添加脚步音效</li><li>千里江山图走廊中添加流水音效</li></ul><h1 id="03-31-V0-2-4"><a href="#03-31-V0-2-4" class="headerlink" title="03.31 V0.2.4"></a>03.31 V0.2.4</h1><p>修改UI</p><ul><li><p>修改导航栏图标为文字，避免左右箭头与移动方向不一致影响体验</p></li><li><p>新增上下左右移动按钮</p><img src="/images/2021/Apr-02-2021 09-24-45.gif"></li><li><p>导航栏初始显示0展览介绍，此时只有下一幅按钮可点击</p></li></ul><p>修改展厅</p><ul><li>新增展览介绍，默认进入场景时面向展览介绍，点下一幅来到第一幅画作</li><li>调整朝代介绍位置，使导航到画作时能完整浏览</li><li>新增出口</li><li>新增方向指示牌，将部分地上的花瓶移动到指示牌平台上</li></ul><p>修改导航模块</p><ul><li>点击画作也可导航</li></ul><h1 id="04-02-V0-3"><a href="#04-02-V0-3" class="headerlink" title="04.02 V0.3"></a>04.02 V0.3</h1><p>新增影厅</p><ul><li><p>开始和暂停视频</p><img src="/images/2021/Apr-02-2021 09-18-14.gif"></li></ul><p>导航栏新增展开按钮</p><ul><li>点击展开去影厅和回起点按钮</li><li>去影厅导航到影厅</li><li>会起点导航到展厅介绍</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;02-16-V0-1&quot;&gt;&lt;a href=&quot;#02-16-V0-1&quot; class=&quot;headerlink&quot; title=&quot;02.16 V0.1&quot;&gt;&lt;/a&gt;02.16 V0.1&lt;/h1&gt;&lt;h2 id=&quot;新增基础移动操作&quot;&gt;&lt;a href=&quot;#新增基础移动操作&quot; cla
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://coconutnutx.github.io/categories/Memo/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Project V0.2 Record</title>
    <link href="https://coconutnutx.github.io/2021/03/16/unity/"/>
    <id>https://coconutnutx.github.io/2021/03/16/unity/</id>
    <published>2021-03-16T09:15:39.000Z</published>
    <updated>2021-03-16T09:15:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>重新搭建了场景，unity中运行没问题</p><h1 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h1><p>构建后遇到一些bug</p><h2 id="按钮文字缺失"><a href="#按钮文字缺失" class="headerlink" title="按钮文字缺失"></a>按钮文字缺失</h2><p>构建mac版本后，按钮上的文字消失了，但是其它地方（详情、场景中）都正常</p><p>发现原本的按钮使用了TextMeshPro，但是没有必要，改成了用Text的</p><p>代码也修改成</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// [SerializeField] private TextMeshProUGUI guideText = null;</span><br><span class="line">    [SerializeField] private Text guideText = null;</span><br></pre></td></tr></table></figure><p>重新构建，就没有问题了</p><p>顺便上一版中第一次点开详情没有文字的bug也消失了</p><h2 id="unityFramework-is-not-defined"><a href="#unityFramework-is-not-defined" class="headerlink" title="unityFramework is not defined"></a>unityFramework is not defined</h2><p>构建webgl版本后，firefox浏览器加载时进度条卡在80%左右，控制台报错</p><p>Uncaught ReferenceError: unityFramework is not defined</p><p>（但是发布到itch.io后可以正常显示）</p><p><a href="https://forum.unity.com/threads/uncaught-referenceerror-unityframework-is-not-defined-at-htmlscriptelement-script-onload-webgl.803967/">https://forum.unity.com/threads/uncaught-referenceerror-unityframework-is-not-defined-at-htmlscriptelement-script-onload-webgl.803967/</a></p><p>参考↑中一个回答：Try to disable compression</p><p>解决😄</p><p>之前看教程的时候应该是调过这个参数的，这次搞忘了</p><h1 id="V0-2-1"><a href="#V0-2-1" class="headerlink" title="V0.2.1"></a>V0.2.1</h1><h2 id="新标签页打开网页"><a href="#新标签页打开网页" class="headerlink" title="新标签页打开网页"></a>新标签页打开网页</h2><p>mac版本中，点查看大图会打开浏览器新页面</p><p>webgl版本中，点查看大图会直接在当前页跳转</p><p>想改成新标签页</p><p>参考<a href="https://stackoverflow.com/questions/62348214/how-to-open-a-link-on-a-new-tab-using-webgl-c-through-unity">https://stackoverflow.com/questions/62348214/how-to-open-a-link-on-a-new-tab-using-webgl-c-through-unity</a></p><blockquote><p>using .jslib file</p><p>Assets/plugins/plugin.jslib</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var plugin = &#123;</span><br><span class="line">    OpenNewTab : function(url)</span><br><span class="line">    &#123;</span><br><span class="line">        url = Pointer_stringify(url);</span><br><span class="line">        window.open(url,&#x27;_blank&#x27;);</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">mergeInto(LibraryManager.library, plugin);</span><br></pre></td></tr></table></figure><p>Your C# script</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line">public class OpenURL : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [DllImport(&quot;__Internal&quot;)]</span><br><span class="line">    private static extern void OpenNewTab(string url);</span><br><span class="line"></span><br><span class="line">    public void openIt(string url)</span><br><span class="line">    &#123;</span><br><span class="line">#if !UNITY_EDITOR &amp;&amp; UNITY_WEBGL</span><br><span class="line">             OpenNewTab(url);</span><br><span class="line">#endif</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if (Input.GetKeyDown(KeyCode.Return))</span><br><span class="line">        &#123;</span><br><span class="line">            openIt(&quot;www.wateverurluwant.com&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>firefox和itch.io测试均可~</p><h2 id="帮助按钮"><a href="#帮助按钮" class="headerlink" title="帮助按钮"></a>帮助按钮</h2><p>还需要把帮助按钮加回来</p><p>并且默认首次打开程序时弹出显示</p><h1 id="V0-2-2"><a href="#V0-2-2" class="headerlink" title="V0.2.2"></a>V0.2.2</h1><h2 id="图片模糊问题"><a href="#图片模糊问题" class="headerlink" title="图片模糊问题"></a>图片模糊问题</h2><p>把所有图片加进去了</p><p>发现千里江山图导入之后很模糊</p><img src="/images/2021/screencapture2021-03-18 PM2.38.54.jpg"><p>发现可以调最大尺寸，就清晰了</p><img src="/images/2021/screencapture2021-03-18 PM2.41.11.jpg"><hr><p>测试发布的时候V0.2.2，build里面data文件有235.4MB，itch.io无法加载</p><p>将图片全体降了一个清晰度，变成114MB，可以加载了，但还是很大</p><p>将5种花删成2种，变成104.7MB</p><p>把波浪长椅换成和其它地方一样的竹椅，墙外的竹子叶子全删到最少，变成102.1MB</p><p>墙外竹子全删掉，变成91.3MB</p><p>V0.2.1的时候是42.3MB，看来还是画最占空间</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;重新搭建了场景，unity中运行没问题&lt;/p&gt;
&lt;h1 id=&quot;Debug&quot;&gt;&lt;a href=&quot;#Debug&quot; class=&quot;headerlink&quot; title=&quot;Debug&quot;&gt;&lt;/a&gt;Debug&lt;/h1&gt;&lt;p&gt;构建后遇到一些bug&lt;/p&gt;
&lt;h2 id=&quot;按钮文字缺失&quot;&gt;
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Project V0.1.2 Record</title>
    <link href="https://coconutnutx.github.io/2021/03/09/unity/"/>
    <id>https://coconutnutx.github.io/2021/03/09/unity/</id>
    <published>2021-03-09T16:15:34.000Z</published>
    <updated>2021-03-09T16:15:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="描述部分"><a href="#描述部分" class="headerlink" title="描述部分"></a>描述部分</h1><p>给导航栏加了一个按钮，点击显示描述</p><p>以及一个查看大图的按钮，打开一个新页面</p><h1 id="查看大图"><a href="#查看大图" class="headerlink" title="查看大图"></a>查看大图</h1><p>关于图画细节的浏览，设想过几种方案：</p><ul><li><p>在Unity内放大图，通过移动人物或滚动图片来查看细节</p><p>但是移动的操作会比较复杂，和现有的控制冲突</p><p>滚动图片的话，各张图的大小差别太大，也不好放</p><p>还有一个是图片的版权问题，下载大图放在工程里感觉还是不太好</p></li><li><p>内嵌网页</p><p>寻找了一些实现方式，但是都比较局限，没有官方的解决方案</p></li><li><p>打开新页面</p><p>简单粗暴，虽然要跳出一下，但是专业的网站看图也好操作</p></li></ul><p>于是暂且就这样了</p><h1 id="图画信息和展板管理"><a href="#图画信息和展板管理" class="headerlink" title="图画信息和展板管理"></a>图画信息和展板管理</h1><p>以前是直接把文字信息放在展板的Object上</p><p>但是随着以后展厅的引入，会很麻烦</p><p>于是将主要信息存到了csv里，并且新增了一个单例的ArtManager，用于管理所有的文本信息和模型中展板的引用。其它Board以及GuideBar中要用到这些信息时，直接通过ArtManager获得。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class ArtManager : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    public static ArtManager instance;</span><br><span class="line"></span><br><span class="line">    // reference to each board in each hall</span><br><span class="line">    [SerializeField] private Board[] boardsInHall0 = null;</span><br><span class="line">    [SerializeField] private Board[] boardsInHall1 = null;</span><br><span class="line"></span><br><span class="line">    // number of halls</span><br><span class="line">    private int numOfHalls = 2;</span><br><span class="line"></span><br><span class="line">    // store art info in each hall</span><br><span class="line">    private Dictionary&lt;int, ArtInfo&gt;[] artInfoStore;</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        if(instance != null)&#123;</span><br><span class="line">            GameObject.Destroy(this.gameObject);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        instance = this;</span><br><span class="line"></span><br><span class="line">        // load art info</span><br><span class="line">        artInfoStore = new Dictionary&lt;int, ArtInfo&gt;[numOfHalls];</span><br><span class="line">        for(int i=0; i&lt;artInfoStore.Length; i++)&#123;</span><br><span class="line">            artInfoStore[i] = new Dictionary&lt;int, ArtInfo&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        ArtInfoLoader.LoadArtInfo(artInfoStore);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // ---------- Functions for Board &amp; GuidBar ----------</span><br><span class="line">    public ArtInfo GetArtInfo(int hall, int index)&#123;</span><br><span class="line">        return artInfoStore[hall][index];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // ---------- Functions for GuideBar ----------</span><br><span class="line">    public string getGuideMenuText(int hall, int index)&#123;</span><br><span class="line">        return artInfoStore[hall][index].title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getBoardNumInHall(int hall)&#123;</span><br><span class="line">        return artInfoStore[hall].Count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Vector3[] getDestination(int hall, int index)&#123;</span><br><span class="line">        Vector3[] ret = null;</span><br><span class="line"></span><br><span class="line">        if(hall == 0)&#123;</span><br><span class="line">            ret = boardsInHall0[index - 1].GetDesitination(); // index begin with 1</span><br><span class="line">        &#125;else if(hall == 1)&#123;</span><br><span class="line">            ret = boardsInHall1[index - 1].GetDesitination();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里不同展厅的展板分了不同的数组，因为二维数组没法在Unity里拖引用，只好退而求其次了</p><p>还有一个细节是，画的index都是从1开始，这个也统一在ArtManager中处理了，其它类中就不用管了</p><h1 id="生成构建Debug"><a href="#生成构建Debug" class="headerlink" title="生成构建Debug"></a>生成构建Debug</h1><p>生成WebGL后，部分文字显示不全</p><p>查到一种解决方式：把颜色空间改成Linear，有错误提示，然后又把自动API取消勾选了。Graphics API变成了WebGL2.0。没用</p><p>popup和按钮中的中文都没有了，难道是字体的问题？</p><p>改了字体，重新生成，可以显示</p><p>但是，每次第一次打开总是没有？要先点过一次左或者右，后续才有显示。也许是加载顺序的问题？</p><p>调了几次顺序，还是不行</p><p>不仅是文字显示，有时刚开始滚动条也没有，后面慢慢解决吧</p><p>MARK 未解决的Bug：</p><p>新加载后，第一次点更多，无文字</p><p>点一次左/右后，有文字，但无法显示滚动条</p><p>重新点开更多，有滚动条</p><h1 id="寻路转向Debug"><a href="#寻路转向Debug" class="headerlink" title="寻路转向Debug"></a>寻路转向Debug</h1><p>有的时候寻路到了终点不会自动转向</p><p>发现设置GuideStatus为Ready后，有时Agent的remainingDistance仍是0（也许是有延迟），于是就直接到了stop状态</p><p>于是改成在Update()中修改状态，当前为Ready且remainingDistance!=0，状态改为On</p><p>当前为On且remainingDistance==0，设置转向，状态改为Static</p><p>但是这样又出现一个问题，即在原地点击寻路，状态无法变成On</p><p>于是在SetNewDestination()中先做一次判断，如果当前位置已经是目的位置，直接将状态设置成On</p><p>之前Ready和On状态是为了处理鼠标点击的一些问题，目前关于鼠标：</p><ul><li>途中 OK</li><li>原地（已经到达，测试转向）<ul><li>导航栏 OK</li><li>展板<ul><li>快点【被打断】</li><li>慢点 OK</li></ul></li></ul></li></ul><p>就很迷惑，先这样吧</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;描述部分&quot;&gt;&lt;a href=&quot;#描述部分&quot; class=&quot;headerlink&quot; title=&quot;描述部分&quot;&gt;&lt;/a&gt;描述部分&lt;/h1&gt;&lt;p&gt;给导航栏加了一个按钮，点击显示描述&lt;/p&gt;
&lt;p&gt;以及一个查看大图的按钮，打开一个新页面&lt;/p&gt;
&lt;h1 id=&quot;查看大图&quot;
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity Note - Project11 Wave2</title>
    <link href="https://coconutnutx.github.io/2021/03/08/unity/"/>
    <id>https://coconutnutx.github.io/2021/03/08/unity/</id>
    <published>2021-03-08T11:03:50.000Z</published>
    <updated>2021-03-08T11:03:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>按照上次的设想：</p><ul><li><p>PerlinNoise生成波浪</p><blockquote><p><a href="https://docs.unity3d.com/cn/current/ScriptReference/Mathf.PerlinNoise.html">https://docs.unity3d.com/cn/current/ScriptReference/Mathf.PerlinNoise.html</a></p></blockquote></li><li><p>用Mesh绘制</p></li><li><p>随时间更新</p></li></ul><img src="/images/2021/Mar-08-2021 12-02-11.gif"><p>效果还不错</p><p>加了几个，调下参数</p><img src="/images/2021/Mar-08-2021 12-35-32.gif"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class WaveCreator : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField] private int waveLength = 100; // length of wave</span><br><span class="line">    [SerializeField] private float segLen = 0.2f; // length of each segment</span><br><span class="line">    [SerializeField] private float samplingInterval = 20f;</span><br><span class="line">    [SerializeField] private float maxHeight = 10f;</span><br><span class="line"></span><br><span class="line">    [SerializeField] private string colorHex = &quot;#45b787&quot;;</span><br><span class="line">    [SerializeField] private float colorAlpha = 0.8f;</span><br><span class="line"></span><br><span class="line">    private Color waveColor;</span><br><span class="line">    private float seedX = 0;</span><br><span class="line">    private float seedY = 0;</span><br><span class="line">    </span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        // generate random seed</span><br><span class="line">        seedX = Random.value * 100f;</span><br><span class="line">        seedY = Random.value * 100f;</span><br><span class="line"></span><br><span class="line">        // set material</span><br><span class="line">        GetComponent&lt;MeshRenderer&gt;().material = InitMaterial();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void Update() &#123;</span><br><span class="line">        float[] arr = GenerateNoiseArray(waveLength);</span><br><span class="line">        DrawWave(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private float[] GenerateNoiseArray(int len)&#123;</span><br><span class="line">        // generate wave height array</span><br><span class="line">        float[] arr = new float[len];</span><br><span class="line">        for(int i=0; i&lt;arr.Length; i++)&#123;</span><br><span class="line">            float x = (i + seedX + Time.time) / samplingInterval;</span><br><span class="line">            float y = (i + seedY) / samplingInterval;</span><br><span class="line">            // noise between 0.0 and 1.0</span><br><span class="line">            arr[i] = Mathf.PerlinNoise(x, y) * maxHeight;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void DrawWave(float[] arr)&#123;</span><br><span class="line">        int n = arr.Length;</span><br><span class="line"></span><br><span class="line">        Vector3[] vertices = new Vector3[2*n];</span><br><span class="line">        List&lt;int&gt; triangleList = new List&lt;int&gt;();</span><br><span class="line"></span><br><span class="line">        // add vertices</span><br><span class="line">        for(int i=0; i&lt;n; i++)&#123;</span><br><span class="line">            vertices[2*i] = new Vector3(segLen*(i+1), 0, 0);</span><br><span class="line">            vertices[2*i + 1] = new Vector3(segLen*(i+1), arr[i], 0);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // add triangles</span><br><span class="line">        for(int i=0;i&lt;n-1;i++)&#123;</span><br><span class="line">            // clockwise order</span><br><span class="line">            triangleList.Add(2*i);</span><br><span class="line">            triangleList.Add(2*i + 1);</span><br><span class="line">            triangleList.Add(2*i + 2);</span><br><span class="line"></span><br><span class="line">            triangleList.Add(2*i + 2);</span><br><span class="line">            triangleList.Add(2*i + 1);</span><br><span class="line">            triangleList.Add(2*i + 3);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int[] triangles = triangleList.ToArray();</span><br><span class="line"></span><br><span class="line">        // get mesh</span><br><span class="line">        Mesh mesh = GetComponent&lt;MeshFilter&gt;().mesh;</span><br><span class="line"></span><br><span class="line">        // clear original mesh</span><br><span class="line">        mesh.Clear();</span><br><span class="line"></span><br><span class="line">        // set new vertices</span><br><span class="line">        mesh.vertices = vertices;</span><br><span class="line"></span><br><span class="line">        // set new triangles</span><br><span class="line">        mesh.triangles = triangles;</span><br><span class="line"></span><br><span class="line">        // calculate mesh</span><br><span class="line">        mesh.RecalculateNormals();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private Material InitMaterial()&#123;</span><br><span class="line">        Material material = new Material(Shader.Find(&quot;Standard&quot;));</span><br><span class="line"></span><br><span class="line">        // set rendering mode</span><br><span class="line">        SetFade(material);</span><br><span class="line"></span><br><span class="line">        // set color</span><br><span class="line">        ColorUtility.TryParseHtmlString(colorHex, out waveColor);</span><br><span class="line">        waveColor.a = colorAlpha;</span><br><span class="line">        material.SetColor(&quot;_Color&quot;, waveColor);</span><br><span class="line"></span><br><span class="line">        return material;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void SetFade(Material material)&#123;</span><br><span class="line">        // set rendering mode to fade to show alpha</span><br><span class="line">        material.SetInt(&quot;_SrcBlend&quot;, (int)UnityEngine.Rendering.BlendMode.SrcAlpha);</span><br><span class="line">        material.SetInt(&quot;_DstBlend&quot;, (int)UnityEngine.Rendering.BlendMode.OneMinusSrcAlpha);</span><br><span class="line">        material.SetInt(&quot;_ZWrite&quot;, 0);</span><br><span class="line">        material.DisableKeyword(&quot;_ALPHATEST_ON&quot;);</span><br><span class="line">        material.EnableKeyword(&quot;_ALPHABLEND_ON&quot;);</span><br><span class="line">        material.DisableKeyword(&quot;_ALPHAPREMULTIPLY_ON&quot;);</span><br><span class="line">        material.renderQueue = 3000;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;按照上次的设想：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PerlinNoise生成波浪&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.unity3d.com/cn/current/ScriptReference/Mathf.PerlinNoi
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity Note - Project10 Wave</title>
    <link href="https://coconutnutx.github.io/2021/02/21/unity/"/>
    <id>https://coconutnutx.github.io/2021/02/21/unity/</id>
    <published>2021-02-21T13:49:27.000Z</published>
    <updated>2021-02-21T13:49:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>尝试做个波浪动画，最后效果：</p><img src="/images/2021/Feb-21-2021 15-51-45.gif"><hr><p>strip做成Prefab</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using DG.Tweening;</span><br><span class="line"></span><br><span class="line">public class Strip : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    public void Activate(float waitSecond, float moveDistance, float moveDuration)</span><br><span class="line">    &#123;</span><br><span class="line">        StartCoroutine(ActivateMovement(waitSecond, moveDistance, moveDuration));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    private IEnumerator ActivateMovement(float waitSecond, float moveDistance, float moveDuration)</span><br><span class="line">    &#123;</span><br><span class="line">        // wait for some time</span><br><span class="line">        yield return new WaitForSeconds(waitSecond);</span><br><span class="line">        </span><br><span class="line">        // set movement</span><br><span class="line">        DOTween.Sequence()</span><br><span class="line">            .Append(transform.DOMoveY(moveDistance, moveDuration).SetEase(Ease.InOutSine))</span><br><span class="line">            .SetLoops(-1,LoopType.Yoyo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加一个controller</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class StripController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    // object setting</span><br><span class="line">    [SerializeField] private int stripNum = 10;</span><br><span class="line">    [SerializeField] private Vector3 stripScale = new Vector3(0.2f,5,0.01f);</span><br><span class="line">    [SerializeField] private Vector3 stripInterval = new Vector3(0.25f,0,0);</span><br><span class="line"></span><br><span class="line">    // movement setting</span><br><span class="line">    [SerializeField] private float moveDistance = 2f;</span><br><span class="line">    [SerializeField] private float moveDuration = 2f;</span><br><span class="line">    [SerializeField] private float moveInterval = 0.1f;</span><br><span class="line"></span><br><span class="line">    private Strip stripPrefab;</span><br><span class="line">    private Strip[] strips;</span><br><span class="line">    </span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        stripPrefab = Resources.Load&lt;Strip&gt;(&quot;strip&quot;);</span><br><span class="line">        CreateStrips();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void CreateStrips()</span><br><span class="line">    &#123;</span><br><span class="line">        strips = new Strip[stripNum];</span><br><span class="line">        for(int i=0; i&lt;stripNum; i++)&#123;</span><br><span class="line">            // create cube</span><br><span class="line">            Strip obj = Instantiate(stripPrefab);</span><br><span class="line">            // set position</span><br><span class="line">            obj.transform.position = transform.position + stripInterval * i;</span><br><span class="line">            obj.transform.localScale = stripScale;</span><br><span class="line">            // activate movement</span><br><span class="line">            obj.Activate(moveInterval*(i+5), moveDistance, moveDuration);</span><br><span class="line">            // add to array</span><br><span class="line">            strips[i] = obj;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>奇怪的一点，前几个条的起始时间总是有点问题，暂时找不出来为什么，先把所有起始时间往后挪一点 MARK</p><img src="/images/2021/screencapture2021-02-21 PM3.21.01.jpg"><p>这样就没问题了</p><img src="/images/2021/screencapture2021-02-21 PM3.23.48.jpg"><hr><p>关于WaitForSeconds()</p><blockquote><p><a href="https://forum.unity.com/threads/waitforseconds-in-c.75411/">https://forum.unity.com/threads/waitforseconds-in-c.75411/</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">private void executeWait()</span><br><span class="line">&#123;</span><br><span class="line">  Debug.Log(&quot;wait start&quot;);</span><br><span class="line">  StartCoroutine(Wait(20.0f));</span><br><span class="line">  Debug.Log(&quot;This gets called after starting the Coroutine&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private IEnumerator Wait(float seconds)</span><br><span class="line">&#123;</span><br><span class="line">  Debug.Log(&quot;waiting&quot;);</span><br><span class="line">  yield return new WaitForSeconds(seconds);</span><br><span class="line">  Debug.Log(&quot;wait end&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>现在这个波浪效果一个问题是DOTWeen消耗太大</p><img src="/images/2021/screencapture2021-02-21 PM3.56.56.jpg"><p>也许还是直接用波浪形物体平移？</p><hr><p>一个很喜欢的chrome插件几枝是用noise做的波浪，试一下Mathf.PerlinNoise()</p><p>参考：</p><blockquote><p><a href="https://blog.csdn.net/FumikiSAMA/article/details/80212432">https://blog.csdn.net/FumikiSAMA/article/details/80212432</a></p><p><a href="https://docs.unity3d.com/ScriptReference/Mathf.PerlinNoise.html">https://docs.unity3d.com/ScriptReference/Mathf.PerlinNoise.html</a></p></blockquote><p>网格拓扑绘制图形</p><blockquote><p><a href="https://www.jianshu.com/p/1f79e33308a6">https://www.jianshu.com/p/1f79e33308a6</a></p></blockquote><p>试着画了一个四面体</p><img src="/images/2021/screencapture2021-02-21 PM5.09.05.jpg"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Vector3[] vertices = new Vector3[4];</span><br><span class="line">vertices[0] = new Vector3(0, 0, 0);</span><br><span class="line">vertices[1] = new Vector3((float)System.Math.Sqrt(3), 1, 0);</span><br><span class="line">vertices[2] = new Vector3(0, 2, 0);</span><br><span class="line">vertices[3] = new Vector3((float)System.Math.Sqrt(1/3), 1, (float)System.Math.Sqrt(8/3));</span><br><span class="line"></span><br><span class="line">int[] triangle = new int[12] &#123;0,2,1,0,1,3,1,2,3,2,0,3&#125;;</span><br><span class="line"></span><br><span class="line">// get mesh</span><br><span class="line">Mesh mesh = GetComponent&lt;MeshFilter&gt;().mesh;</span><br><span class="line"></span><br><span class="line">// clear original mesh</span><br><span class="line">mesh.Clear();</span><br><span class="line"></span><br><span class="line">// set new vertices</span><br><span class="line">mesh.vertices = vertices;</span><br><span class="line"></span><br><span class="line">// set new triangles</span><br><span class="line">mesh.triangles = triangle;</span><br><span class="line"></span><br><span class="line">// calculate mesh</span><br><span class="line">mesh.RecalculateNormals();</span><br></pre></td></tr></table></figure><p>下次用这个画波浪试试</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;尝试做个波浪动画，最后效果：&lt;/p&gt;
&lt;img src=&quot;/images/2021/Feb-21-2021 15-51-45.gif&quot;&gt;

&lt;hr&gt;
&lt;p&gt;strip做成Prefab&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Project V0.1.1 Record - UI,Event</title>
    <link href="https://coconutnutx.github.io/2021/02/17/unity/"/>
    <id>https://coconutnutx.github.io/2021/02/17/unity/</id>
    <published>2021-02-17T14:59:43.000Z</published>
    <updated>2021-02-17T14:59:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Canvas大小"><a href="#Canvas大小" class="headerlink" title="Canvas大小"></a>Canvas大小</h1><blockquote><p><a href="https://www.youtube.com/watch?v=OKK69bmjmJE&amp;ab_channel=Creagines">https://www.youtube.com/watch?v=OKK69bmjmJE&amp;ab_channel=Creagines</a></p></blockquote><p>Canvas Scaler-&gt; 缩放模式 -&gt; 屏幕大小缩放</p><p>解决了上次文字飞掉的问题</p><p>可以下一步啦</p><img src="/images/2021/screencapture2021-02-17 PM5.26.42.jpg"><h1 id="点击按钮"><a href="#点击按钮" class="headerlink" title="点击按钮"></a>点击按钮</h1><blockquote><p><a href="https://www.cnblogs.com/Peng18233754457/p/7792442.html">https://www.cnblogs.com/Peng18233754457/p/7792442.html</a></p></blockquote><p>一开始事件用的是Button的onClick()</p><p>发现Event System更好用</p><img src="/images/2021/screencapture2021-02-17 PM8.10.25.jpg"><ul><li>Button上鼠标单击()里+ （其它事件可以添加组件触发）</li><li>EventTest.cs中 public void A()</li></ul><p>Button这样就可以了</p><p>3D物体要使用，还要先给Main Camera加一个Physics Raycaster组件</p><h1 id="点击寻路"><a href="#点击寻路" class="headerlink" title="点击寻路"></a>点击寻路</h1><p>Player监听点击实现，更改寻路</p><blockquote><p><a href="https://www.youtube.com/watch?v=wlo-ZvV3ovg&amp;ab_channel=JasonWeimann">https://www.youtube.com/watch?v=wlo-ZvV3ovg&amp;ab_channel=JasonWeimann</a></p></blockquote><p>参考↑通过Action实现，避免到处reference</p><h1 id="寻路转向"><a href="#寻路转向" class="headerlink" title="寻路转向"></a>寻路转向</h1><p>寻路完成后转向board</p><p>设置了一个isNavigating变量，记录状态</p><p>到达后用DOTWeen转向</p><h1 id="寻路打断"><a href="#寻路打断" class="headerlink" title="寻路打断"></a>寻路打断</h1><p>每次有输入时，打断寻路，同时将设置成false</p><p>一个小问题是，第一次点击board时将isNavigating设成true，但同时Input.GetMouseButtonUp(0)也会为true，所以额外用了一个firstClick判断是否为第一次点击</p><p>最后相关代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">private bool isNavigating = false;</span><br><span class="line">private bool firstClick = true;</span><br><span class="line">private Vector3 turnPosition;</span><br><span class="line"></span><br><span class="line">void Update()</span><br><span class="line">&#123;</span><br><span class="line">  if(Input.GetMouseButtonUp(0))&#123;</span><br><span class="line">    if(isNavigating)&#123;</span><br><span class="line">      if(firstClick)&#123;</span><br><span class="line">        firstClick = false;</span><br><span class="line">      &#125;else&#123;</span><br><span class="line">        isNavigating = false;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">      firstClick = true; </span><br><span class="line">      // 这里可能有点点问题，isNavigating设成false之后，要下一次Update才能检测到，但是Update调得很快，基本感觉不到，所以暂时就这样写了，看着舒服些。但MARK一下，以后如果有问题，再把这里拆出去单独判断。</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">// ...</span><br><span class="line"></span><br><span class="line">  &#125;else if(Input.GetMouseButton(0))&#123;</span><br><span class="line">    isNavigating = false;</span><br><span class="line"></span><br><span class="line">   // ...</span><br><span class="line"></span><br><span class="line">  &#125;else if(Input.GetAxis(&quot;Mouse ScrollWheel&quot;)!=0 || Input.GetAxis(&quot;Horizontal&quot;)!=0 || Input.GetAxis(&quot;Vertical&quot;)!=0)&#123;</span><br><span class="line">    isNavigating = false;</span><br><span class="line"></span><br><span class="line">    // ...</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private void SetNewDestination(Vector3 destination, Vector3 boardPosition) &#123;</span><br><span class="line">  // set new destination</span><br><span class="line">  agent.SetDestination(destination);</span><br><span class="line"></span><br><span class="line">  // set turn destination</span><br><span class="line">  turnPosition = boardPosition;</span><br><span class="line">  isNavigating = true;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="02-19-update"><a href="#02-19-update" class="headerlink" title="02.19 update"></a>02.19 update</h2><p>后续做导游时发现，点击UI寻路按钮时，事件发生的顺序是：</p><ul><li>GetMouseButton</li><li>Set Destination</li><li>GetMouseButtonUp</li></ul><p>而再次GetMouseButton和GetMouseButtonUp都需要打断，用之前的方法很混乱</p><p>于是改成三种状态，只能按顺序切换</p><ol><li><p>GuideStatus.Static 默认状态</p></li><li><p>GuideStatus.Ready 设置寻路后，Static-&gt;Ready</p></li><li><p>GuideStatus.On</p><ul><li>Ready状态获取到一次GetMouseButtonUp，变成On</li><li>On状态时，GetMouseButton或GetMouseButtonUp均会打断寻路，变成Static</li><li>On状态到达目的地后，变成Static</li></ul></li></ol><p>测试目前没什么问题</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">private Vector3 turnPosition;</span><br><span class="line">private GuideStatus currentGuideStatus = GuideStatus.Static;</span><br><span class="line">private enum GuideStatus</span><br><span class="line">&#123;</span><br><span class="line">  Static,</span><br><span class="line">  Ready,</span><br><span class="line">  On</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void Update()</span><br><span class="line">&#123;</span><br><span class="line">  if(Input.GetMouseButtonUp(0))&#123;</span><br><span class="line">    // if is click</span><br><span class="line">    if(mouseDownCount &lt; 2)&#123;</span><br><span class="line">      if(currentGuideStatus == GuideStatus.Ready)&#123;</span><br><span class="line">        currentGuideStatus = GuideStatus.On;</span><br><span class="line">      &#125;else if(currentGuideStatus == GuideStatus.On)&#123;</span><br><span class="line">        currentGuideStatus = GuideStatus.Static;</span><br><span class="line">        Debug.Log(&quot;[guide] disrupted by GetMouseButtonUp-Click&quot;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // ...</span><br><span class="line">    mouseDownCount = 0;</span><br><span class="line"></span><br><span class="line">  &#125;else if(Input.GetMouseButton(0))&#123;</span><br><span class="line">    if(currentGuideStatus==GuideStatus.On)&#123;</span><br><span class="line">      currentGuideStatus = GuideStatus.Static;</span><br><span class="line">      Debug.Log(&quot;[guide] disrupted by GetMouseButton&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // ...</span><br><span class="line"></span><br><span class="line">    mouseDownCount++;</span><br><span class="line"></span><br><span class="line">  &#125;else if(Input.GetAxis(&quot;Mouse ScrollWheel&quot;)!=0 || Input.GetAxis(&quot;Horizontal&quot;)!=0 || Input.GetAxis(&quot;Vertical&quot;)!=0)&#123;</span><br><span class="line">      if(currentGuideStatus==GuideStatus.On)&#123;</span><br><span class="line">        currentGuideStatus = GuideStatus.Static;</span><br><span class="line">        Debug.Log(&quot;[guide] disrupted by Movement&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      // ...</span><br><span class="line">    </span><br><span class="line">  &#125;else&#123;</span><br><span class="line">    if(currentGuideStatus==GuideStatus.On &amp;&amp; agent.remainingDistance==0)&#123;</span><br><span class="line">      Debug.Log(&quot;[guide] look at &quot;+turnPosition);</span><br><span class="line">      transform.DOLookAt(turnPosition,turnDuration,AxisConstraint.Y);</span><br><span class="line">      currentGuideStatus = GuideStatus.Static;</span><br><span class="line">      Debug.Log(&quot;[guide] end&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private void SetNewDestination(Vector3 destination, Vector3 destination2) &#123;</span><br><span class="line">  Debug.Log(&quot;[guide] start&quot;);</span><br><span class="line">  currentGuideStatus = GuideStatus.Ready;</span><br><span class="line"></span><br><span class="line">  // set new destination</span><br><span class="line">  agent.SetDestination(destination);</span><br><span class="line"></span><br><span class="line">  // set turn destination</span><br><span class="line">  turnPosition = destination2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="UI遮盖Raycast"><a href="#UI遮盖Raycast" class="headerlink" title="UI遮盖Raycast"></a>UI遮盖Raycast</h1><p>加完导航寻路的UI之后，发现raycast仍可以穿透UI，同时点击寻路</p><p>看到一种解决是用EventSystem.current.IsPointerOverGameObject()</p><p>但是Canvas是全屏大小，点击哪里都是true</p><p>Canvas Group也没有用</p><blockquote><p><a href="https://stackoverflow.com/questions/52654002/unity-not-ignoring-button-click-in-ignore-raycast-layer">https://stackoverflow.com/questions/52654002/unity-not-ignoring-button-click-in-ignore-raycast-layer</a></p></blockquote><p>最后参考这个</p><blockquote><p><a href="https://gameinstitute.qq.com/community/detail/129017">https://gameinstitute.qq.com/community/detail/129017</a></p></blockquote><p>给所有的Button加了tag来判断</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">private bool IsPointerOverUIObject()&#123;</span><br><span class="line">    // get mouse position</span><br><span class="line">    PointerEventData eventDataCurrentPosition = new PointerEventData(EventSystem.current);</span><br><span class="line">    eventDataCurrentPosition.position = new Vector2(Input.mousePosition.x, Input.mousePosition.y);</span><br><span class="line"></span><br><span class="line">    // get all raycast result</span><br><span class="line">    List&lt;RaycastResult&gt; results = new List&lt;RaycastResult&gt;();</span><br><span class="line">    EventSystem.current.RaycastAll(eventDataCurrentPosition, results);</span><br><span class="line">    </span><br><span class="line">    // check UI tag</span><br><span class="line">    foreach(RaycastResult r in results)&#123;</span><br><span class="line">        if(r.gameObject.tag == &quot;UI&quot;)&#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="脚本执行顺序问题"><a href="#脚本执行顺序问题" class="headerlink" title="脚本执行顺序问题"></a>脚本执行顺序问题</h1><p>做了导航栏之后，发现初始化顺序有点问题</p><p>导航栏要使用Board上的数字和名字，有时会为默认值</p><p>选中任意一个script，调整Inspector-&gt;Execution Order，解决</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Canvas大小&quot;&gt;&lt;a href=&quot;#Canvas大小&quot; class=&quot;headerlink&quot; title=&quot;Canvas大小&quot;&gt;&lt;/a&gt;Canvas大小&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Project V0.1 Record</title>
    <link href="https://coconutnutx.github.io/2021/02/16/unity/"/>
    <id>https://coconutnutx.github.io/2021/02/16/unity/</id>
    <published>2021-02-16T17:24:56.000Z</published>
    <updated>2021-02-16T17:24:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>做了个初版试试水~😃</p><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><h2 id="点击寻路"><a href="#点击寻路" class="headerlink" title="点击寻路"></a>点击寻路</h2><img src="/images/2021/Feb-16-2021 18-29-31.gif"><h2 id="靠近显示介绍"><a href="#靠近显示介绍" class="headerlink" title="靠近显示介绍"></a>靠近显示介绍</h2><img src="/images/2021/Feb-16-2021 18-29-44.gif"><h2 id="鼠标滚动前后平移"><a href="#鼠标滚动前后平移" class="headerlink" title="鼠标滚动前后平移"></a>鼠标滚动前后平移</h2><img src="/images/2021/Feb-16-2021 18-30-18.gif"><h2 id="键盘前后左右平移"><a href="#键盘前后左右平移" class="headerlink" title="键盘前后左右平移"></a>键盘前后左右平移</h2><img src="/images/2021/Feb-16-2021 18-30-32.gif"><h2 id="鼠标拖拽旋转视角"><a href="#鼠标拖拽旋转视角" class="headerlink" title="鼠标拖拽旋转视角"></a>鼠标拖拽旋转视角</h2><img src="/images/2021/Feb-16-2021 18-30-55.gif"><h1 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h1><img src="/images/2021/screencapture2021-02-16 PM6.27.11.jpg"><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="PlayerController"><a href="#PlayerController" class="headerlink" title="PlayerController"></a>PlayerController</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class PlayerController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField, Range(0f,500f)]</span><br><span class="line">    private float mouseLookSensitivity = 200f;</span><br><span class="line"></span><br><span class="line">    [SerializeField, Range(0f,100f)]</span><br><span class="line">    private float mouseMoveSensitivity = 10f;</span><br><span class="line"></span><br><span class="line">    [SerializeField, Range(0f,10f)]</span><br><span class="line">    private float keyMoveSensitivity = 5f;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Transform cameraTransform = null;</span><br><span class="line"></span><br><span class="line">    private float cameraRotation = 0f;</span><br><span class="line">    private int mouseDownCount = 0;</span><br><span class="line"></span><br><span class="line">    UnityEngine.AI.NavMeshAgent agent;</span><br><span class="line"></span><br><span class="line">    GameObject clickEffect;</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        agent = GetComponent&lt;UnityEngine.AI.NavMeshAgent&gt;();</span><br><span class="line"></span><br><span class="line">        clickEffect = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/ClickEffect&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if(Input.GetMouseButtonUp(0))&#123;</span><br><span class="line">            // if is click</span><br><span class="line">            if(mouseDownCount &lt; 2)&#123;</span><br><span class="line">                // click to navigate</span><br><span class="line">                RaycastHit hit;</span><br><span class="line">                Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">                if(Physics.Raycast(ray, out hit, Mathf.Infinity))&#123;</span><br><span class="line">                    // move when hit floor</span><br><span class="line">                    if(hit.transform.tag == &quot;Floor&quot;)&#123;</span><br><span class="line">                        agent.SetDestination(hit.point);</span><br><span class="line"></span><br><span class="line">                        // click effect</span><br><span class="line">                        GameObject clickEffectObject = Instantiate(clickEffect);</span><br><span class="line">                        clickEffectObject.transform.position = hit.point;</span><br><span class="line">                        Destroy(clickEffectObject, 1);</span><br><span class="line">                    &#125; </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            mouseDownCount = 0;</span><br><span class="line"></span><br><span class="line">        &#125;else if(Input.GetMouseButton(0))&#123;</span><br><span class="line">            // stop navigation</span><br><span class="line">            agent.ResetPath();</span><br><span class="line"></span><br><span class="line">            // get mouse position</span><br><span class="line">            float mouseX = Input.GetAxis(&quot;Mouse X&quot;) * mouseLookSensitivity * Time.deltaTime;</span><br><span class="line">            float mouseY = Input.GetAxis(&quot;Mouse Y&quot;) * mouseLookSensitivity * Time.deltaTime;</span><br><span class="line"></span><br><span class="line">            // rotate camera up and down</span><br><span class="line">            cameraRotation -= mouseY;</span><br><span class="line">            cameraRotation = Mathf.Clamp(cameraRotation, -30f, 30f);</span><br><span class="line">            cameraTransform.localRotation = Quaternion.Euler(cameraRotation, 0f, 0f);</span><br><span class="line"></span><br><span class="line">            // rotate player left and right</span><br><span class="line">            transform.Rotate(Vector3.up * (mouseX));</span><br><span class="line"></span><br><span class="line">            mouseDownCount++;</span><br><span class="line"></span><br><span class="line">        &#125;else if(Input.GetAxis(&quot;Mouse ScrollWheel&quot;)!=0 || Input.GetAxis(&quot;Horizontal&quot;)!=0 || Input.GetAxis(&quot;Vertical&quot;)!=0)&#123;</span><br><span class="line">            // stop navigation</span><br><span class="line">            agent.ResetPath();</span><br><span class="line"></span><br><span class="line">            // mouse scroll input</span><br><span class="line">            float mouseV = Input.GetAxis(&quot;Mouse ScrollWheel&quot;);</span><br><span class="line">            // keyborad input</span><br><span class="line">            float keyV = Input.GetAxis(&quot;Vertical&quot;);</span><br><span class="line">            float keyH = Input.GetAxis(&quot;Horizontal&quot;);</span><br><span class="line"></span><br><span class="line">            Vector3 move = transform.forward * (mouseV * mouseMoveSensitivity + keyV * keyMoveSensitivity)</span><br><span class="line">                        + transform.right * keyH * keyMoveSensitivity;</span><br><span class="line"></span><br><span class="line">            agent.Move(move * Time.deltaTime);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ArtTextController"><a href="#ArtTextController" class="headerlink" title="ArtTextController"></a>ArtTextController</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line">public class ArtTextController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField]</span><br><span class="line">    private string title;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private string description;</span><br><span class="line"></span><br><span class="line">    [SerializeField, Range(0f,10f)]</span><br><span class="line">    private float displayTextDistance = 5f;</span><br><span class="line"></span><br><span class="line">    private Transform playerTransform;</span><br><span class="line"></span><br><span class="line">    private Text displayArtTitle;</span><br><span class="line">    private Text displayArtDescription;</span><br><span class="line"></span><br><span class="line">    private float dist;</span><br><span class="line"></span><br><span class="line">    private bool check;</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        // get player transform</span><br><span class="line">        playerTransform = GameObject.FindWithTag(&quot;Player&quot;).GetComponent&lt;Transform&gt;();</span><br><span class="line"></span><br><span class="line">        // get UI text</span><br><span class="line">        displayArtTitle = GameObject.FindWithTag(&quot;ArtTitle&quot;).GetComponent&lt;Text&gt;();</span><br><span class="line">        displayArtDescription = GameObject.FindWithTag(&quot;ArtDescription&quot;).GetComponent&lt;Text&gt;();</span><br><span class="line"></span><br><span class="line">        // set default text</span><br><span class="line">        displayArtTitle.text = &quot;&quot;;</span><br><span class="line">        displayArtDescription.text = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">        check = false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Update is called once per frame</span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if(playerTransform)</span><br><span class="line">        &#123;</span><br><span class="line">            // distance between art and player</span><br><span class="line">            dist = Vector3.Distance(transform.position, playerTransform.position);</span><br><span class="line">            if (dist &lt; displayTextDistance)</span><br><span class="line">            &#123;</span><br><span class="line">                displayArtTitle.text = title;</span><br><span class="line">                displayArtDescription.text = description;</span><br><span class="line">                check = true;</span><br><span class="line">            &#125;</span><br><span class="line">            // turn off display</span><br><span class="line">            if (dist &gt; displayTextDistance &amp;&amp; check == true)</span><br><span class="line">            &#123;</span><br><span class="line">                Start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="构建测试"><a href="#构建测试" class="headerlink" title="构建测试"></a>构建测试</h1><p>MacOS 没问题</p><p>Android 试了一下，场景没问题，操作混乱</p><p>​    安卓导出参考<a href="https://coconutnutx.github.io/2020/09/26/note-arfoundation-01/">AR Foundation笔记01 安卓Setup</a></p><p>​    目前的操作方式针对电脑，手机端以后再看要不要做</p><p>WebGL 整了半天</p><p>​    参考<a href="https://www.youtube.com/watch?v=G7TK0-vbEYc&ab_channel=UGuruz">WebGL Export in Unity 2020</a></p><p>​    成功发布到itch.io，但是靠近显示介绍没有了？</p><p>​    本地Firefox打开，也没有</p><h2 id="WebGL-Debug"><a href="#WebGL-Debug" class="headerlink" title="WebGL Debug"></a>WebGL Debug</h2><p>Unity里跑没问题</p><p>Debug.Log人物和画的距离，可以显示，所以可能是</p><p>​    UI显示出了问题</p><p>​    文字没有赋值成功</p><p>​    位置偏了</p><p>给Text设了默认值，再试</p><img src="/images/2021/screencapture2021-02-16 PM9.59.05.jpg"><p>默认值显示了</p><img src="/images/2021/screencapture2021-02-16 PM9.59.12.jpg"><p>靠近没有了</p><p>所以应该是位置不对</p><p>不过后面准备改显示方法，暂时MARK，以后放UI的时候也有可能碰到这个问题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;做了个初版试试水~😃&lt;/p&gt;
&lt;h1 id=&quot;功能&quot;&gt;&lt;a href=&quot;#功能&quot; class=&quot;headerlink&quot; title=&quot;功能&quot;&gt;&lt;/a&gt;功能&lt;/h1&gt;&lt;h2 id=&quot;点击寻路&quot;&gt;&lt;a href=&quot;#点击寻路&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity Note - Project09 Movement</title>
    <link href="https://coconutnutx.github.io/2021/02/15/unity-09/"/>
    <id>https://coconutnutx.github.io/2021/02/15/unity-09/</id>
    <published>2021-02-15T19:17:07.000Z</published>
    <updated>2021-02-15T19:17:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>最终想要做的移动方式：</p><ul><li>点击地面导航</li><li>拖拽旋转</li><li>缩放平移</li><li>点击画导航</li></ul><p>交互方式参考：</p><blockquote><p><a href="https://sketchfab.com/3d-models/richards-art-gallery-audio-tour-0e3e19faa6474fd5974e6a7ed1b221d8">https://sketchfab.com/3d-models/richards-art-gallery-audio-tour-0e3e19faa6474fd5974e6a7ed1b221d8</a></p></blockquote><h1 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h1><h2 id="点击移动"><a href="#点击移动" class="headerlink" title="点击移动"></a>点击移动</h2><p>参考Project02，AI导航+NavMeshAgent</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if(Input.GetMouseButtonDown(0))&#123;</span><br><span class="line">  RaycastHit hit;</span><br><span class="line">  Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">  if(Physics.Raycast(ray, out hit, Mathf.Infinity))&#123;</span><br><span class="line">    agent.SetDestination(hit.point);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断落点，只有是地面才移动（地面打Tag）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if(Input.GetMouseButtonDown(0))&#123;</span><br><span class="line">RaycastHit hit;</span><br><span class="line">Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">if(Physics.Raycast(ray, out hit, Mathf.Infinity))&#123;</span><br><span class="line">if(hit.transform.tag == &quot;Floor&quot;)&#123;</span><br><span class="line">agent.SetDestination(hit.point);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点击特效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// click to navigate</span><br><span class="line">if(Input.GetMouseButtonDown(0))&#123;</span><br><span class="line">    RaycastHit hit;</span><br><span class="line">    Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">    if(Physics.Raycast(ray, out hit, Mathf.Infinity))&#123;</span><br><span class="line">        // move when hit floor</span><br><span class="line">        if(hit.transform.tag == &quot;Floor&quot;)&#123;</span><br><span class="line">            agent.SetDestination(hit.point);</span><br><span class="line"></span><br><span class="line">            // click effect</span><br><span class="line">            GameObject clickEffectObject = Instantiate(clickEffect);</span><br><span class="line">            clickEffectObject.transform.position = hit.point;</span><br><span class="line">            Destroy(clickEffectObject, 0.5f);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="拖拽旋转视角"><a href="#拖拽旋转视角" class="headerlink" title="拖拽旋转视角"></a>拖拽旋转视角</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// get mouse position</span><br><span class="line">float mouseX = Input.GetAxis(&quot;Mouse X&quot;) * mouseSensitivity * Time.deltaTime;</span><br><span class="line">float mouseY = Input.GetAxis(&quot;Mouse Y&quot;) * mouseSensitivity * Time.deltaTime;</span><br><span class="line"></span><br><span class="line">// rotate camera up and down</span><br><span class="line">cameraRotation -= mouseY;</span><br><span class="line">cameraRotation = Mathf.Clamp(cameraRotation, -30f, 30f);</span><br><span class="line">cameraTransform.localRotation = Quaternion.Euler(cameraRotation, 0f, 0f);</span><br><span class="line"></span><br><span class="line">// rotate player left and right</span><br><span class="line">transform.Rotate(Vector3.up * (mouseX));</span><br></pre></td></tr></table></figure><p>此时长按拖拽和点击寻路会混，加一个mouseDownCount计数</p><h2 id="缩放前后移动"><a href="#缩放前后移动" class="headerlink" title="缩放前后移动"></a>缩放前后移动</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// stop navigation</span><br><span class="line">agent.ResetPath();</span><br><span class="line"></span><br><span class="line">// scroll to move forward and backward</span><br><span class="line">Vector3 move = transform.forward * Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * scrollSensitivity;</span><br><span class="line">agent.Move(move * Time.deltaTime);</span><br></pre></td></tr></table></figure><p>！这里一定要先停止寻路，否则会乱抖</p><h1 id="最终"><a href="#最终" class="headerlink" title="最终"></a>最终</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line"></span><br><span class="line">public class PlayerController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField, Range(0f,100f)]</span><br><span class="line">    private float scrollSensitivity = 10f;</span><br><span class="line"></span><br><span class="line">    [SerializeField, Range(0f,500f)]</span><br><span class="line">    private float mouseSensitivity = 200f;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Transform cameraTransform = null;</span><br><span class="line"></span><br><span class="line">    private float cameraRotation = 0f;</span><br><span class="line">    private int mouseDownCount = 0;</span><br><span class="line"></span><br><span class="line">    UnityEngine.AI.NavMeshAgent agent;</span><br><span class="line"></span><br><span class="line">    GameObject clickEffect;</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        agent = GetComponent&lt;UnityEngine.AI.NavMeshAgent&gt;();</span><br><span class="line"></span><br><span class="line">        clickEffect = Resources.Load&lt;GameObject&gt;(&quot;Prefabs/ClickEffect&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if(Input.GetMouseButtonUp(0))&#123;</span><br><span class="line">            // if is click</span><br><span class="line">            if(mouseDownCount &lt; 2)&#123;</span><br><span class="line">                // click to navigate</span><br><span class="line">                RaycastHit hit;</span><br><span class="line">                Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">                if(Physics.Raycast(ray, out hit, Mathf.Infinity))&#123;</span><br><span class="line">                    // move when hit floor</span><br><span class="line">                    if(hit.transform.tag == &quot;Floor&quot;)&#123;</span><br><span class="line">                        agent.SetDestination(hit.point);</span><br><span class="line"></span><br><span class="line">                        // click effect</span><br><span class="line">                        GameObject clickEffectObject = Instantiate(clickEffect);</span><br><span class="line">                        clickEffectObject.transform.position = hit.point;</span><br><span class="line">                        Destroy(clickEffectObject, 1);</span><br><span class="line">                    &#125; </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            mouseDownCount = 0;</span><br><span class="line">        &#125;else if(Input.GetAxis(&quot;Mouse ScrollWheel&quot;) != 0)&#123;</span><br><span class="line">            // stop navigation</span><br><span class="line">            agent.ResetPath();</span><br><span class="line"></span><br><span class="line">            // scroll to move forward and backward</span><br><span class="line">            Vector3 move = transform.forward * Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * scrollSensitivity;</span><br><span class="line">            agent.Move(move * Time.deltaTime);</span><br><span class="line">        &#125;else if(Input.GetMouseButton(0))&#123;</span><br><span class="line">            // stop navigation</span><br><span class="line">            agent.ResetPath();</span><br><span class="line"></span><br><span class="line">            // get mouse position</span><br><span class="line">            float mouseX = Input.GetAxis(&quot;Mouse X&quot;) * mouseSensitivity * Time.deltaTime;</span><br><span class="line">            float mouseY = Input.GetAxis(&quot;Mouse Y&quot;) * mouseSensitivity * Time.deltaTime;</span><br><span class="line"></span><br><span class="line">            // rotate camera up and down</span><br><span class="line">            cameraRotation -= mouseY;</span><br><span class="line">            cameraRotation = Mathf.Clamp(cameraRotation, -30f, 30f);</span><br><span class="line">            cameraTransform.localRotation = Quaternion.Euler(cameraRotation, 0f, 0f);</span><br><span class="line"></span><br><span class="line">            // rotate player left and right</span><br><span class="line">            transform.Rotate(Vector3.up * (mouseX));</span><br><span class="line"></span><br><span class="line">            mouseDownCount++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点击寻路</p><img src="/images/2021/Feb-16-2021 16-49-06.gif"><p>滚动前后平移</p><img src="/images/2021/Feb-16-2021 16-49-24.gif"><p>拖拽旋转视角</p><img src="/images/2021/Feb-16-2021 16-49-34.gif"><p>且寻路过程中，滚动或拖拽均打断寻路</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最终想要做的移动方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击地面导航&lt;/li&gt;
&lt;li&gt;拖拽旋转&lt;/li&gt;
&lt;li&gt;缩放平移&lt;/li&gt;
&lt;li&gt;点击画导航&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;交互方式参考：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://ske
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity Note - Project08 Gallery</title>
    <link href="https://coconutnutx.github.io/2021/02/15/unity/"/>
    <id>https://coconutnutx.github.io/2021/02/15/unity/</id>
    <published>2021-02-15T16:59:21.000Z</published>
    <updated>2021-02-15T16:59:21.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://learn.unity.com/project/create-a-personal-3d-gallery-project-with-unity">Create a Personal 3D Gallery Project with Unity</a></p></blockquote><ol><li><p>Use the [first person controller](First Person All-in-One) in asset store</p></li><li><p>Model scale ~= Cube 40*40</p></li></ol><img src="/images/2021/screencapture2021-02-15 PM6.13.09.jpg"><ol start="3"><li><p>Add Component-&gt;Physic-&gt;Mesh Collider to models</p></li><li><p>Light: turn off shadow &amp; increase range to 20</p></li><li><p>Sound effect for different walking materials</p><p>Change Material in Mesh Collider, not Mesh Renderer</p></li></ol><img src="/images/2021/screencapture2021-02-15 PM6.26.31.jpg"><ol start="6"><li><p>Add UI-&gt;Text</p><p>When setting Rect Transform, press Alt(Option) to set position as well</p></li><li><p>Add Tag to Text</p></li><li><p>Add Image: Drag jpg onto Plane</p></li><li><p>Close to display text</p></li></ol><p>drag script onto image</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">public class Proximity : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    public string newTitle;</span><br><span class="line">    public string newAuthor;</span><br><span class="line">    public string newDesc;</span><br><span class="line">    private Transform other;</span><br><span class="line">    private Text myTitle;</span><br><span class="line">    private Text myAuthor;</span><br><span class="line">    private Text myDesc;</span><br><span class="line">    private float dist;</span><br><span class="line">    private GameObject player;</span><br><span class="line">    private GameObject message1;</span><br><span class="line">    private GameObject message2;</span><br><span class="line">    private GameObject message3;</span><br><span class="line">    private bool check;</span><br><span class="line"></span><br><span class="line">    // Start is called before the first frame update</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        player = GameObject.FindWithTag(&quot;Player&quot;);</span><br><span class="line">        other = player.GetComponent&lt;Transform&gt;();</span><br><span class="line">        message1 = GameObject.FindWithTag(&quot;ArtTitle&quot;);</span><br><span class="line">        message2 = GameObject.FindWithTag(&quot;ArtAuthor&quot;);</span><br><span class="line">        message3 = GameObject.FindWithTag(&quot;ArtDescription&quot;);</span><br><span class="line">        myTitle = message1.GetComponent&lt;Text&gt;();</span><br><span class="line">        myTitle.text = &quot;&quot;;</span><br><span class="line">        myAuthor = message2.GetComponent&lt;Text&gt;();</span><br><span class="line">        myAuthor.text = &quot;&quot;;</span><br><span class="line">        myDesc = message3.GetComponent&lt;Text&gt;();</span><br><span class="line">        myDesc.text = &quot;&quot;;</span><br><span class="line">        check = false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Update is called once per frame</span><br><span class="line">    void Update()</span><br><span class="line">    &#123;</span><br><span class="line">        if (other)</span><br><span class="line">        &#123;</span><br><span class="line">            dist = Vector3.Distance(transform.position, other.position);</span><br><span class="line">            print(&quot;Distance to player: &quot; + dist);</span><br><span class="line">            if (dist &lt; 4)</span><br><span class="line">            &#123;</span><br><span class="line">                myTitle.text = newTitle;</span><br><span class="line">                myAuthor.text = newAuthor;</span><br><span class="line">                myDesc.text = newDesc;</span><br><span class="line">                check = true;</span><br><span class="line">            &#125;</span><br><span class="line">            if (dist &gt; 4 &amp;&amp; check == true)</span><br><span class="line">            &#123;</span><br><span class="line">                Start();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://learn.unity.com/project/create-a-personal-3d-gallery-project-with-unity&quot;&gt;Create a Personal 3D Gallery Proje
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity Note - Project07 Scroll</title>
    <link href="https://coconutnutx.github.io/2021/02/14/unity/"/>
    <id>https://coconutnutx.github.io/2021/02/14/unity/</id>
    <published>2021-02-14T19:09:34.000Z</published>
    <updated>2021-02-14T19:09:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Test-open-animation"><a href="#Test-open-animation" class="headerlink" title="Test open animation"></a>Test open animation</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using DG.Tweening;</span><br><span class="line"></span><br><span class="line">public class ReelController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float radius = 0.1f; // Cylinder radius</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float length = 8.0f; // Quad length</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float innerHeight = 1.0f; // Quad height</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float outerHeight = 0.8f; // Cylinder height</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float openDuration = 1.0f;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Ease moveEase = Ease.Linear;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Transform leftCylinderTransform = null;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Transform middleQuadTransform = null;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Transform rightCylinderTransform = null;</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        // set original position</span><br><span class="line">        middleQuadTransform.localScale = new Vector3(radius*2,innerHeight,0);</span><br><span class="line">        middleQuadTransform.position = new Vector3(0,0,radius);</span><br><span class="line"></span><br><span class="line">        leftCylinderTransform.localScale = new Vector3(radius*2,outerHeight,radius*2);</span><br><span class="line">        leftCylinderTransform.position = new Vector3(-radius,0,0);</span><br><span class="line"></span><br><span class="line">        rightCylinderTransform.localScale = new Vector3(radius*2,outerHeight,radius*2);</span><br><span class="line">        rightCylinderTransform.position = new Vector3(radius,0,0);</span><br><span class="line"></span><br><span class="line">        OpenReel();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void OpenReel()</span><br><span class="line">    &#123;</span><br><span class="line">        // open canvas</span><br><span class="line">        middleQuadTransform.DOScaleX(length + radius*2, openDuration).SetEase(moveEase);</span><br><span class="line"></span><br><span class="line">        // move cylinders</span><br><span class="line">        leftCylinderTransform.DOMoveX(leftCylinderTransform.position.x - length/2, openDuration).SetEase(moveEase);</span><br><span class="line">        rightCylinderTransform.DOMoveX(rightCylinderTransform.position.x + length/2, openDuration).SetEase(moveEase);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/images/2021/Feb-14-2021 20-11-48.gif"><h1 id="Display-image"><a href="#Display-image" class="headerlink" title="Display image"></a>Display image</h1><p>Drag images to asset folder -&gt; Set type to Sprite -&gt; Apply</p><p>Canvas -&gt; Set Render Mode to World Space</p><p>Make sure all objects are positioned at (0, 0, 0)</p><img src="/images/2021/screencapture2021-02-14 PM9.43.21.jpg"><p>Test size</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">RectTransform rectTransfrom = GetComponentInChildren&lt;Image&gt;().GetComponent&lt;RectTransform&gt;();</span><br><span class="line"></span><br><span class="line">Debug.Log(&quot;rectTransfrom: &quot;+rectTransfrom);</span><br><span class="line">Debug.Log(&quot;rectTransfrom.rect: &quot;+rectTransfrom.rect);</span><br><span class="line">Debug.Log(&quot;rectTransfrom.sizeDelta: &quot;+rectTransfrom.sizeDelta);</span><br><span class="line"></span><br><span class="line">Rect rect = rectTransfrom.rect;</span><br><span class="line">rectTransfrom.sizeDelta = new Vector2(rect.width/rect.height*canvasHeight,canvasHeight);</span><br><span class="line"></span><br><span class="line">Debug.Log(&quot;rectTransfrom: &quot;+rectTransfrom);</span><br><span class="line">Debug.Log(&quot;rectTransfrom.rect: &quot;+rectTransfrom.rect);</span><br><span class="line">Debug.Log(&quot;rectTransfrom.sizeDelta: &quot;+rectTransfrom.sizeDelta);</span><br></pre></td></tr></table></figure><img src="/images/2021/screencapture2021-02-14 PM9.45.02.jpg"><h1 id="Set-scroll-size"><a href="#Set-scroll-size" class="headerlink" title="Set scroll size"></a>Set scroll size</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line">using DG.Tweening;</span><br><span class="line"></span><br><span class="line">public class ReelController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float canvasHeight = 1000;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float cylinderHeight = 600;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float cylinderRadius = 30;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float openDuration = 1.0f;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Ease moveEase = Ease.Linear;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Transform leftCylinderTransform = null;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Transform rightCylinderTransform = null;</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        // get image rectTransfrom</span><br><span class="line">        RectTransform rectTransfrom = GetComponentInChildren&lt;Image&gt;().GetComponent&lt;RectTransform&gt;();</span><br><span class="line">        // get original image size</span><br><span class="line">        Rect rect = rectTransfrom.rect;</span><br><span class="line">        // scale to default height</span><br><span class="line">        float canvasWidth = rect.width / rect.height * canvasHeight;</span><br><span class="line">        rectTransfrom.sizeDelta = new Vector2(canvasWidth, canvasHeight);</span><br><span class="line"></span><br><span class="line">        // set original position</span><br><span class="line">        leftCylinderTransform.localScale = new Vector3(cylinderRadius*2, cylinderHeight, cylinderRadius*2);</span><br><span class="line">        leftCylinderTransform.position = new Vector3(-cylinderRadius - canvasWidth/2,0,0);</span><br><span class="line"></span><br><span class="line">        rightCylinderTransform.localScale = new Vector3(cylinderRadius*2, cylinderHeight, cylinderRadius*2);</span><br><span class="line">        rightCylinderTransform.position = new Vector3(cylinderRadius + canvasWidth/2,0,0);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/images/2021/screencapture2021-02-14 PM10.09.59.jpg"><h1 id="Scroll-animation"><a href="#Scroll-animation" class="headerlink" title="Scroll animation"></a>Scroll animation</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using UnityEngine.UI;</span><br><span class="line">using DG.Tweening;</span><br><span class="line"></span><br><span class="line">public class ScrollController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float canvasHeight = 1000;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float cylinderHeight = 600;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float cylinderRadius = 30;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private float openDuration = 1.0f;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Ease moveEase = Ease.Linear;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Transform leftCylinderTransform = null;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Transform rightCylinderTransform = null;</span><br><span class="line"></span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        // Open();</span><br><span class="line"></span><br><span class="line">        OpenAnimation();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void Open()</span><br><span class="line">    &#123;</span><br><span class="line">        // get image rectTransfrom</span><br><span class="line">        RectTransform rectTransfrom = GetComponentInChildren&lt;Image&gt;().GetComponent&lt;RectTransform&gt;();</span><br><span class="line">        // get original image size</span><br><span class="line">        Rect rect = rectTransfrom.rect;</span><br><span class="line">        // scale to default height</span><br><span class="line">        float canvasWidth = rect.width / rect.height * canvasHeight;</span><br><span class="line">        rectTransfrom.sizeDelta = new Vector2(canvasWidth, canvasHeight);</span><br><span class="line"></span><br><span class="line">        // set original position</span><br><span class="line">        leftCylinderTransform.localScale = new Vector3(cylinderRadius*2, cylinderHeight, cylinderRadius*2);</span><br><span class="line">        leftCylinderTransform.position = new Vector3(-cylinderRadius - canvasWidth/2,0,0);</span><br><span class="line"></span><br><span class="line">        rightCylinderTransform.localScale = new Vector3(cylinderRadius*2, cylinderHeight, cylinderRadius*2);</span><br><span class="line">        rightCylinderTransform.position = new Vector3(cylinderRadius + canvasWidth/2,0,0);</span><br><span class="line"></span><br><span class="line">        Debug.Log(&quot;Scroll opened: &quot; + rectTransfrom.rect);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    void OpenAnimation()</span><br><span class="line">    &#123;</span><br><span class="line">        // get image rectTransfrom</span><br><span class="line">        RectTransform rectTransfrom = GetComponentInChildren&lt;Image&gt;().GetComponent&lt;RectTransform&gt;();</span><br><span class="line">        // get original image size</span><br><span class="line">        Rect rect = rectTransfrom.rect;</span><br><span class="line"></span><br><span class="line">        // set width to 0</span><br><span class="line">        rectTransfrom.DOScaleX(0, 0).SetEase(moveEase);</span><br><span class="line"></span><br><span class="line">        // scale to default height</span><br><span class="line">        float canvasWidth = rect.width / rect.height * canvasHeight;</span><br><span class="line">        // open canvas</span><br><span class="line">        float scaleX = canvasWidth/rect.width;</span><br><span class="line">        float scaleY = canvasHeight/rect.height;</span><br><span class="line">        rectTransfrom.DOScale(new Vector2(scaleX, scaleY), openDuration).SetEase(moveEase);</span><br><span class="line"></span><br><span class="line">        // move cylinders</span><br><span class="line">        leftCylinderTransform.localScale = new Vector3(cylinderRadius*2, cylinderHeight, cylinderRadius*2);</span><br><span class="line">        leftCylinderTransform.DOMoveX(leftCylinderTransform.position.x - canvasWidth/2, openDuration).SetEase(moveEase);</span><br><span class="line"></span><br><span class="line">        rightCylinderTransform.localScale = new Vector3(cylinderRadius*2, cylinderHeight, cylinderRadius*2);</span><br><span class="line">        rightCylinderTransform.DOMoveX(rightCylinderTransform.position.x + canvasWidth/2, openDuration).SetEase(moveEase);</span><br><span class="line"></span><br><span class="line">        Debug.Log(&quot;Scroll opened with animation: &quot; + rectTransfrom.rect);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/images/2021/Feb-14-2021 22-58-33.gif">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Test-open-animation&quot;&gt;&lt;a href=&quot;#Test-open-animation&quot; class=&quot;headerlink&quot; title=&quot;Test open animation&quot;&gt;&lt;/a&gt;Test open animation&lt;/h1&gt;&lt;figu
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Unity Note - Project06 DoTween</title>
    <link href="https://coconutnutx.github.io/2021/02/14/unity-note/"/>
    <id>https://coconutnutx.github.io/2021/02/14/unity-note/</id>
    <published>2021-02-14T15:31:45.000Z</published>
    <updated>2021-02-14T15:31:45.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.youtube.com/watch?v=cKwz4xlQHmo&ab_channel=DilmerValecillos">Creating Dynamic animations with DOTween for Unity3d</a></p></blockquote><blockquote><p><a href="http://dotween.demigiant.com/documentation.php">DoTween Documentation</a></p></blockquote><ol><li><p>Add asset <a href="https://assetstore.unity.com/packages/tools/animation/dotween-hotween-v2-27676">DOTween (HOTween v2)</a></p></li><li><p>Add 3D Objects</p></li></ol><img src="/images/2021/screencapture2021-02-14 PM4.51.38.jpg"><ol start="3"><li>Move one way</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using DG.Tweening;</span><br><span class="line"></span><br><span class="line">public class DoTweenController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Vector3 targetLocation = Vector3.zero;</span><br><span class="line"></span><br><span class="line">    [SerializeField, Range(1.0f, 10.0f)]</span><br><span class="line">    private float moveDuration = 1.0f;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Ease moveEase = Ease.Linear;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private DoTweenType doTweenType = DoTweenType.MovementOneWay;</span><br><span class="line"></span><br><span class="line">    // Different types of animation</span><br><span class="line">    private enum DoTweenType</span><br><span class="line">    &#123;</span><br><span class="line">        MovementOneWay</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Start is called before the first frame update</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        if(doTweenType == DoTweenType.MovementOneWay)&#123;</span><br><span class="line">            if(targetLocation == Vector3.zero)&#123;</span><br><span class="line">                // stay at original position</span><br><span class="line">                targetLocation = transform.position;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            transform.DOMove(targetLocation, moveDuration).SetEase(moveEase);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/images/2021/Feb-14-2021 17-43-05.gif"><ol start="4"><li>More types</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">using System.Collections;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using UnityEngine;</span><br><span class="line">using DG.Tweening;</span><br><span class="line"></span><br><span class="line">public class DoTweenController : MonoBehaviour</span><br><span class="line">&#123;</span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Vector3 targetLocation = Vector3.zero;</span><br><span class="line"></span><br><span class="line">    [SerializeField, Range(1.0f, 10.0f)]</span><br><span class="line">    private float moveDuration = 1.0f;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Ease moveEase = Ease.Linear;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private Color targetColor;</span><br><span class="line"></span><br><span class="line">    [SerializeField, Range(1.0f, 10.0f)]</span><br><span class="line">    private float colorChangeDuration = 1.0f;</span><br><span class="line"></span><br><span class="line">    [SerializeField, Range(0.1f, 10.0f)]</span><br><span class="line">    private float scaleMultiplier = 3.0f;</span><br><span class="line"></span><br><span class="line">    [SerializeField]</span><br><span class="line">    private DoTweenType doTweenType = DoTweenType.MovementOneWay;</span><br><span class="line"></span><br><span class="line">    // Different types of animation</span><br><span class="line">    private enum DoTweenType</span><br><span class="line">    &#123;</span><br><span class="line">        MovementOneWay,</span><br><span class="line">        MovementTwoWay,</span><br><span class="line">        MovementOneWayColorChange,</span><br><span class="line">        MomementOneWayColorChangeScaleChange</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Start is called before the first frame update</span><br><span class="line">    void Start()</span><br><span class="line">    &#123;</span><br><span class="line">        if(targetLocation == Vector3.zero)&#123;</span><br><span class="line">                // stay at original position</span><br><span class="line">                targetLocation = transform.position;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        if(doTweenType == DoTweenType.MovementOneWay)&#123;</span><br><span class="line">            transform.DOMove(targetLocation, moveDuration).SetEase(moveEase);</span><br><span class="line">        &#125;</span><br><span class="line">        else if(doTweenType == DoTweenType.MovementTwoWay)&#123;</span><br><span class="line">            StartCoroutine(MoveWithBothWays());</span><br><span class="line">        &#125;</span><br><span class="line">        else if(doTweenType == DoTweenType.MovementOneWayColorChange)&#123;</span><br><span class="line">            // another way</span><br><span class="line">            DOTween.Sequence()</span><br><span class="line">                .Append(transform.DOMove(targetLocation, moveDuration).SetEase(moveEase))</span><br><span class="line">                .Append(transform.GetComponent&lt;Renderer&gt;().material.DOColor(targetColor, colorChangeDuration).SetEase(moveEase));</span><br><span class="line">        &#125;</span><br><span class="line">        else if(doTweenType == DoTweenType.MomementOneWayColorChangeScaleChange)&#123;</span><br><span class="line">            DOTween.Sequence()</span><br><span class="line">                .Append(transform.DOMove(targetLocation, moveDuration).SetEase(moveEase))</span><br><span class="line">                .Append(transform.GetComponent&lt;Renderer&gt;().material.DOColor(targetColor, colorChangeDuration).SetEase(moveEase))</span><br><span class="line">                .Append(transform.DOScale(scaleMultiplier, moveDuration).SetEase(moveEase));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private IEnumerator MoveWithBothWays()&#123;</span><br><span class="line">        // save original position</span><br><span class="line">        Vector3 originalLocation = transform.position;</span><br><span class="line"></span><br><span class="line">        // go to traget location</span><br><span class="line">        transform.DOMove(targetLocation, moveDuration).SetEase(moveEase);</span><br><span class="line"></span><br><span class="line">        // wait</span><br><span class="line">        yield return new WaitForSeconds(moveDuration);</span><br><span class="line"></span><br><span class="line">        // go to original location</span><br><span class="line">        transform.DOMove(originalLocation, moveDuration).SetEase(moveEase);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/images/2021/Feb-14-2021 18-16-16.gif">]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=cKwz4xlQHmo&amp;ab_channel=DilmerValecillos&quot;&gt;Creating Dynamic animations with DOTween f
      
    
    </summary>
    
    
      <category term="Note" scheme="https://coconutnutx.github.io/categories/Note/"/>
    
    
      <category term="unity" scheme="https://coconutnutx.github.io/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>Notion Offline记录</title>
    <link href="https://coconutnutx.github.io/2021/02/12/notionn/"/>
    <id>https://coconutnutx.github.io/2021/02/12/notionn/</id>
    <published>2021-02-12T22:29:15.000Z</published>
    <updated>2021-02-12T22:29:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>Notion的app突然Offline了</p><p>直接访问显示DNS_PROBE_FINISHED_NXDOMAIN</p><p>根据↓尝试</p><blockquote><p><a href="https://linmi.cc/6133.html">https://linmi.cc/6133.html</a></p></blockquote><p>1.加host<br>cmd中 open /etc<br>host中加一行 104.18.23.110 notion.so<br>此时可以ping通notion.so，但app仍是offline</p><p>2.改DNS<br>加119.29.29.29<br>114.114.114.114<br>没有用，改回默认</p><p>暂时还是不能用，等修复吧<br>哎，失去notion仿佛失去了半个脑子</p><p>更新：<br>然后发现github.io也访问不了了，是运营商的问题<br>DNS改成114.114.114.114后解决</p><p>再更新：<br>notion好了！我活了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Notion的app突然Offline了&lt;/p&gt;
&lt;p&gt;直接访问显示DNS_PROBE_FINISHED_NXDOMAIN&lt;/p&gt;
&lt;p&gt;根据↓尝试&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://linmi.cc/6133.html&quot;&gt;https
      
    
    </summary>
    
    
      <category term="Memo" scheme="https://coconutnutx.github.io/categories/Memo/"/>
    
    
      <category term="tool" scheme="https://coconutnutx.github.io/tags/tool/"/>
    
  </entry>
  
</feed>
